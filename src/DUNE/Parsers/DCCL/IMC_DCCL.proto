///////////////////////////////////////////////////////////////////////////////////////////
// Every time the /Proto/dcclMsg.proto file is modified                                  //
// turn on the DCCL flag while compiling in order to update the pb.cc and pb.h files     //
// (in dune/build: cmake -DDCCL=ON ../source)                                             //
///////////////////////////////////////////////////////////////////////////////////////////

syntax = "proto3";
import "dccl/option_extensions.proto";

// Enum Z Units
enum ZUnits {
    NONE = 0;
    DEPTH = 1;
    ALTITUDE = 2;
    HEIGHT = 3;
}

// Enum Speed Units
enum SpeedUnits {
    METERS_PS = 0;
    RPM = 1;
    PERCENTAGE = 2;
}

// Enum Maneuver Type
enum ManeuverType {
    GOTO = 0;
    FOLLOWPATH = 1;
    //Teleoperation
    //YoYo
}

// Enum Entity Parameter Name
enum ParameterName {
    ACTIVE = 0;
    BOTTOM_TRACK_MINIMUM_DEPTH = 1;
}

// Enum False True
enum FalseTrue {
    FALSE = 0;
    TRUE = 1;
}

//Enum EntityName 
enum EntityName {
    PATH_CONTROL = 0;
    RANGER = 1; 
    ACOUSTIC_MODEM = 2;
}

//Enum TransitionCondition 
enum TransitionCondition {
    MANEUVERISDONE = 0;
    //Others?
}

// Estimated State
message EstimatedState {
    option (dccl.msg) = { codec_version: 4 id: 350 max_bytes: 80};
    float lat = 1 [(dccl.field) = { min: -1.570 max: 1.570 precision: 3 }];
    float lon = 2 [(dccl.field) = { min: -3.141 max: 3.141 precision: 3 }];
    float height = 3 [(dccl.field) = { min: -1000 max: 7000  precision: 1 }];
    float x = 4 [(dccl.field) = { min: -20000  max: 20000  precision: 1  }];
    float y = 5 [(dccl.field) = { min: -20000 max: 20000  precision: 1 }];
    float z = 6 [(dccl.field) = { min: -400 max: 400  precision: 1 }];
    float phi = 7 [(dccl.field) = { min: -3.141 max: 3.141 precision: 3 }];
    float theta = 8 [(dccl.field) = { min: -1.570 max: 1.570 precision: 3 }];
    float psi = 9 [(dccl.field) = { min: -3.141 max: 3.141 precision: 3 }];
    float u = 10 [(dccl.field) = { min: -10 max: 10 precision: 1 }];
    float v = 11 [(dccl.field) = { min: -10 max: 10 precision: 1 }];
    float w = 12 [(dccl.field) = { min: -10 max: 10 precision: 1 }];
    float vx = 13 [(dccl.field) = { min: -10 max: 10 precision: 1 }];
    float vy = 14 [(dccl.field) = { min: -10 max: 10 precision: 1 }];
    float vz = 15 [(dccl.field) = { min: -10 max: 10 precision: 1 }];
    float p = 16 [(dccl.field) = { min: -3.141 max: 3.141 precision: 3 }]; 
    float q = 17 [(dccl.field) = { min: -3.141 max: 3.141 precision: 3 }]; 
    float r = 18 [(dccl.field) = { min: -3.141 max: 3.141 precision: 3 }]; 
    float depth = 19 [(dccl.field) = { min: -1 max: 400 precision: 1 }];
    float altitude = 20 [(dccl.field) = { min: -1 max: 5000 precision: 1 }];
}

// Goto Maneuver
message Goto {
    option (dccl.msg) = { codec_version: 4 id: 450 max_bytes: 80};
    int32 timeout = 1 [(dccl.field) = { min: 0 max: 65535}];
    float lat = 2 [(dccl.field) = { min: -1.570 max: 1.570 precision: 3 }];
    float lon = 3 [(dccl.field) = { min: -3.141 max: 3.141 precision: 3 }];
    float z = 4 [(dccl.field) = { min: -400 max: 400 precision: 1 }];
    ZUnits z_units = 5;
    float speed = 6 [(dccl.field) = { min: -2000 max: 2000 precision: 1 }];
    SpeedUnits speed_units = 7;
    float roll = 8 [(dccl.field) = { min: -1 max: 6.283 precision: 3 }];
    float pitch = 9 [(dccl.field) = { min: -1 max: 6.283 precision: 3 }];
    float yaw = 10 [(dccl.field) = { min: -1 max: 6.283 precision: 3 }];
    //TODO: costum field > enum with possible string
}

// FollowPath Maneuver
message FollowPath {
    option (dccl.msg) = { codec_version: 4 id: 457 max_bytes: 1000};
    int32 timeout = 1 [(dccl.field) = { min: 0 max: 65535}];
    float lat = 2 [(dccl.field) = { min: -1.570 max: 1.570 precision: 3 }];
    float lon = 3 [(dccl.field) = { min: -3.141 max: 3.141 precision: 3 }];
    float z = 4 [(dccl.field) = { min: -400 max: 400 precision: 1 }];
    ZUnits z_units = 5;
    float speed = 6 [(dccl.field) = { min: -2000 max: 2000 precision: 1 }];
    SpeedUnits speed_units = 7;
    repeated PathPoint points = 8 [(dccl.field) = { max_repeat: 30 }];
    //TODO: costum field > enum with possible string
}

// PathPoint 
message PathPoint {
    option (dccl.msg) = { codec_version: 4 id: 458 max_bytes: 80};
    float x = 1 [(dccl.field) = { min: -20000  max: 20000  precision: 1  }];
    float y = 2 [(dccl.field) = { min: -20000 max: 20000  precision: 1 }];
    float z = 3 [(dccl.field) = { min: -400 max: 400  precision: 1 }];
}

// Maneuver - message group
message Maneuver{   
    option (dccl.msg) = { codec_version: 4 id: 1 max_bytes: 300};
    oneof ManeuverUnion{
        Goto goto_maneuver = 1 ;
        FollowPath followpath_maneuver = 2;
        //TODO: Insert here other maneuvers from Message-Group Maneuver
    }
}

// ParameterValue
message ParameterValue{   
    option (dccl.msg) = { codec_version: 4 id: 2 max_bytes: 300};
    oneof ParameterValueUnion{
        float value_number = 1 [(dccl.field) = { min: -400 max: 400 precision: 1 }];
        FalseTrue value_bool = 2;
    }
}


// EntityParameter
message EntityParameter {
    option (dccl.msg) = { codec_version: 4 id: 801 max_bytes: 20};
    ParameterName name = 1;
    ParameterValue value = 2;
}

//EntityParameters
message EntityParameters {
    option (dccl.msg) = { codec_version: 4 id: 802 max_bytes: 40};
    EntityName name = 1; 
    repeated EntityParameter params = 2 [(dccl.field) = { max_repeat: 3 }];
}

// ManeuverID (composed by maneuver_type and maneuver_number (max number in the maneuver name = 50))
message ManeuverID {
    option (dccl.msg) = { codec_version: 4 id: 3 max_bytes: 30};
    ManeuverType maneuver_type = 1;
    int32 maneuver_number = 2 [(dccl.field) = { min: 0 max: 50}];
}


// PlanManeuver 
message PlanManeuver {
    option (dccl.msg) = { codec_version: 4 id: 552 max_bytes: 400};
    ManeuverID maneuver_id = 1;
    Maneuver data = 2;
    repeated EntityParameters start_actions = 3 [(dccl.field) = { max_repeat: 5 }];
    //end action
}


// TransitionConditions 
message TransitionConditions {
    option (dccl.msg) = { codec_version: 4 id: 4 max_bytes: 30};
    repeated TransitionCondition conditions = 1 [(dccl.field) = { max_repeat: 5 }];
}


// PlanTransition 
message PlanTransition {
    option (dccl.msg) = { codec_version: 4 id: 553 max_bytes: 400};
    ManeuverID source_man = 1;
    ManeuverID dest_man = 2;
    TransitionConditions conditions = 3;
    //TODO: TransitionActions
}

// PlanSpecification 
message PlanSpecification {
    option (dccl.msg) = { codec_version: 4 id: 551 max_bytes: 5000};
    string plan_id = 1 [(dccl.field).max_length = 2]; 
    ManeuverID start_man_id = 2;
    repeated PlanManeuver maneuvers = 3 [(dccl.field) = { max_repeat: 10 }];
    repeated PlanTransition transitions = 4 [(dccl.field) = { max_repeat: 10 }];
    repeated EntityParameters start_actions = 5 [(dccl.field) = { max_repeat: 5 }];
    //end_actions
    //description
    //vnamespace
    //variables

}



