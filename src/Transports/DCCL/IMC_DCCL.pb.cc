// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: IMC_DCCL.proto

#include "IMC_DCCL.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_IMC_5fDCCL_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_IMC_5fDCCL_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Goto;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_IMC_5fDCCL_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Loiter;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_IMC_5fDCCL_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ManeuverID;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_IMC_5fDCCL_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ParameterValue;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_IMC_5fDCCL_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PathPoint;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_IMC_5fDCCL_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PlanVariable;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_IMC_5fDCCL_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_EntityParameter;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_IMC_5fDCCL_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_EntityParameters;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_IMC_5fDCCL_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_FollowPath;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_IMC_5fDCCL_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_PlanTransition;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_IMC_5fDCCL_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_Maneuver;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_IMC_5fDCCL_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_PlanManeuver;
}  // namespace protobuf_IMC_5fDCCL_2eproto
namespace IMC_DCCL {
class EstimatedStateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EstimatedState>
      _instance;
} _EstimatedState_default_instance_;
class GotoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Goto>
      _instance;
} _Goto_default_instance_;
class FollowPathDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FollowPath>
      _instance;
} _FollowPath_default_instance_;
class LoiterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Loiter>
      _instance;
} _Loiter_default_instance_;
class PathPointDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PathPoint>
      _instance;
} _PathPoint_default_instance_;
class ManeuverDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Maneuver>
      _instance;
  const ::IMC_DCCL::Goto* goto_maneuver_;
  const ::IMC_DCCL::FollowPath* followpath_maneuver_;
  const ::IMC_DCCL::Loiter* loiter_maneuver_;
} _Maneuver_default_instance_;
class ParameterValueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ParameterValue>
      _instance;
  float value_number_;
  int value_bool_;
} _ParameterValue_default_instance_;
class EntityParameterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EntityParameter>
      _instance;
} _EntityParameter_default_instance_;
class EntityParametersDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EntityParameters>
      _instance;
} _EntityParameters_default_instance_;
class ManeuverIDDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ManeuverID>
      _instance;
} _ManeuverID_default_instance_;
class PlanManeuverDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PlanManeuver>
      _instance;
} _PlanManeuver_default_instance_;
class PlanVariableDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PlanVariable>
      _instance;
} _PlanVariable_default_instance_;
class PlanTransitionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PlanTransition>
      _instance;
} _PlanTransition_default_instance_;
class PlanSpecificationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PlanSpecification>
      _instance;
} _PlanSpecification_default_instance_;
}  // namespace IMC_DCCL
namespace protobuf_IMC_5fDCCL_2eproto {
static void InitDefaultsEstimatedState() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IMC_DCCL::_EstimatedState_default_instance_;
    new (ptr) ::IMC_DCCL::EstimatedState();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::IMC_DCCL::EstimatedState::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_EstimatedState =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsEstimatedState}, {}};

static void InitDefaultsGoto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IMC_DCCL::_Goto_default_instance_;
    new (ptr) ::IMC_DCCL::Goto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::IMC_DCCL::Goto::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Goto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGoto}, {}};

static void InitDefaultsFollowPath() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IMC_DCCL::_FollowPath_default_instance_;
    new (ptr) ::IMC_DCCL::FollowPath();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::IMC_DCCL::FollowPath::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_FollowPath =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsFollowPath}, {
      &protobuf_IMC_5fDCCL_2eproto::scc_info_PathPoint.base,}};

static void InitDefaultsLoiter() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IMC_DCCL::_Loiter_default_instance_;
    new (ptr) ::IMC_DCCL::Loiter();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::IMC_DCCL::Loiter::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Loiter =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLoiter}, {}};

static void InitDefaultsPathPoint() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IMC_DCCL::_PathPoint_default_instance_;
    new (ptr) ::IMC_DCCL::PathPoint();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::IMC_DCCL::PathPoint::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PathPoint =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPathPoint}, {}};

static void InitDefaultsManeuver() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IMC_DCCL::_Maneuver_default_instance_;
    new (ptr) ::IMC_DCCL::Maneuver();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::IMC_DCCL::Maneuver::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_Maneuver =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsManeuver}, {
      &protobuf_IMC_5fDCCL_2eproto::scc_info_Goto.base,
      &protobuf_IMC_5fDCCL_2eproto::scc_info_FollowPath.base,
      &protobuf_IMC_5fDCCL_2eproto::scc_info_Loiter.base,}};

static void InitDefaultsParameterValue() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IMC_DCCL::_ParameterValue_default_instance_;
    new (ptr) ::IMC_DCCL::ParameterValue();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::IMC_DCCL::ParameterValue::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ParameterValue =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsParameterValue}, {}};

static void InitDefaultsEntityParameter() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IMC_DCCL::_EntityParameter_default_instance_;
    new (ptr) ::IMC_DCCL::EntityParameter();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::IMC_DCCL::EntityParameter::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_EntityParameter =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsEntityParameter}, {
      &protobuf_IMC_5fDCCL_2eproto::scc_info_ParameterValue.base,}};

static void InitDefaultsEntityParameters() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IMC_DCCL::_EntityParameters_default_instance_;
    new (ptr) ::IMC_DCCL::EntityParameters();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::IMC_DCCL::EntityParameters::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_EntityParameters =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsEntityParameters}, {
      &protobuf_IMC_5fDCCL_2eproto::scc_info_EntityParameter.base,}};

static void InitDefaultsManeuverID() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IMC_DCCL::_ManeuverID_default_instance_;
    new (ptr) ::IMC_DCCL::ManeuverID();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::IMC_DCCL::ManeuverID::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ManeuverID =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsManeuverID}, {}};

static void InitDefaultsPlanManeuver() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IMC_DCCL::_PlanManeuver_default_instance_;
    new (ptr) ::IMC_DCCL::PlanManeuver();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::IMC_DCCL::PlanManeuver::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_PlanManeuver =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsPlanManeuver}, {
      &protobuf_IMC_5fDCCL_2eproto::scc_info_ManeuverID.base,
      &protobuf_IMC_5fDCCL_2eproto::scc_info_Maneuver.base,
      &protobuf_IMC_5fDCCL_2eproto::scc_info_EntityParameters.base,}};

static void InitDefaultsPlanVariable() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IMC_DCCL::_PlanVariable_default_instance_;
    new (ptr) ::IMC_DCCL::PlanVariable();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::IMC_DCCL::PlanVariable::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PlanVariable =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPlanVariable}, {}};

static void InitDefaultsPlanTransition() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IMC_DCCL::_PlanTransition_default_instance_;
    new (ptr) ::IMC_DCCL::PlanTransition();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::IMC_DCCL::PlanTransition::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_PlanTransition =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPlanTransition}, {
      &protobuf_IMC_5fDCCL_2eproto::scc_info_ManeuverID.base,}};

static void InitDefaultsPlanSpecification() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IMC_DCCL::_PlanSpecification_default_instance_;
    new (ptr) ::IMC_DCCL::PlanSpecification();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::IMC_DCCL::PlanSpecification::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<5> scc_info_PlanSpecification =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 5, InitDefaultsPlanSpecification}, {
      &protobuf_IMC_5fDCCL_2eproto::scc_info_ManeuverID.base,
      &protobuf_IMC_5fDCCL_2eproto::scc_info_PlanManeuver.base,
      &protobuf_IMC_5fDCCL_2eproto::scc_info_PlanTransition.base,
      &protobuf_IMC_5fDCCL_2eproto::scc_info_EntityParameters.base,
      &protobuf_IMC_5fDCCL_2eproto::scc_info_PlanVariable.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_EstimatedState.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Goto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FollowPath.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Loiter.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PathPoint.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Maneuver.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ParameterValue.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EntityParameter.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EntityParameters.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ManeuverID.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PlanManeuver.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PlanVariable.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PlanTransition.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PlanSpecification.base);
}

::google::protobuf::Metadata file_level_metadata[14];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[11];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMC_DCCL::EstimatedState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMC_DCCL::EstimatedState, lat_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMC_DCCL::EstimatedState, lon_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMC_DCCL::EstimatedState, height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMC_DCCL::EstimatedState, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMC_DCCL::EstimatedState, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMC_DCCL::EstimatedState, z_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMC_DCCL::EstimatedState, phi_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMC_DCCL::EstimatedState, theta_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMC_DCCL::EstimatedState, psi_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMC_DCCL::EstimatedState, u_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMC_DCCL::EstimatedState, v_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMC_DCCL::EstimatedState, w_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMC_DCCL::EstimatedState, vx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMC_DCCL::EstimatedState, vy_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMC_DCCL::EstimatedState, vz_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMC_DCCL::EstimatedState, p_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMC_DCCL::EstimatedState, q_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMC_DCCL::EstimatedState, r_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMC_DCCL::EstimatedState, depth_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMC_DCCL::EstimatedState, altitude_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMC_DCCL::Goto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMC_DCCL::Goto, timeout_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMC_DCCL::Goto, lat_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMC_DCCL::Goto, lon_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMC_DCCL::Goto, z_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMC_DCCL::Goto, z_units_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMC_DCCL::Goto, speed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMC_DCCL::Goto, speed_units_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMC_DCCL::Goto, roll_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMC_DCCL::Goto, pitch_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMC_DCCL::Goto, yaw_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMC_DCCL::FollowPath, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMC_DCCL::FollowPath, timeout_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMC_DCCL::FollowPath, lat_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMC_DCCL::FollowPath, lon_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMC_DCCL::FollowPath, z_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMC_DCCL::FollowPath, z_units_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMC_DCCL::FollowPath, speed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMC_DCCL::FollowPath, speed_units_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMC_DCCL::FollowPath, points_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMC_DCCL::Loiter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMC_DCCL::Loiter, timeout_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMC_DCCL::Loiter, lat_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMC_DCCL::Loiter, lon_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMC_DCCL::Loiter, z_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMC_DCCL::Loiter, z_units_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMC_DCCL::Loiter, duration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMC_DCCL::Loiter, speed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMC_DCCL::Loiter, speed_units_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMC_DCCL::Loiter, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMC_DCCL::Loiter, radius_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMC_DCCL::Loiter, length_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMC_DCCL::Loiter, bearing_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMC_DCCL::Loiter, direction_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMC_DCCL::PathPoint, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMC_DCCL::PathPoint, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMC_DCCL::PathPoint, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMC_DCCL::PathPoint, z_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMC_DCCL::Maneuver, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMC_DCCL::Maneuver, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::IMC_DCCL::ManeuverDefaultTypeInternal, goto_maneuver_),
  offsetof(::IMC_DCCL::ManeuverDefaultTypeInternal, followpath_maneuver_),
  offsetof(::IMC_DCCL::ManeuverDefaultTypeInternal, loiter_maneuver_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMC_DCCL::Maneuver, ManeuverUnion_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMC_DCCL::ParameterValue, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMC_DCCL::ParameterValue, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::IMC_DCCL::ParameterValueDefaultTypeInternal, value_number_),
  offsetof(::IMC_DCCL::ParameterValueDefaultTypeInternal, value_bool_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMC_DCCL::ParameterValue, ParameterValueUnion_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMC_DCCL::EntityParameter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMC_DCCL::EntityParameter, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMC_DCCL::EntityParameter, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMC_DCCL::EntityParameters, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMC_DCCL::EntityParameters, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMC_DCCL::EntityParameters, params_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMC_DCCL::ManeuverID, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMC_DCCL::ManeuverID, maneuver_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMC_DCCL::ManeuverID, maneuver_number_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMC_DCCL::PlanManeuver, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMC_DCCL::PlanManeuver, maneuver_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMC_DCCL::PlanManeuver, data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMC_DCCL::PlanManeuver, start_actions_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMC_DCCL::PlanVariable, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMC_DCCL::PlanVariable, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMC_DCCL::PlanVariable, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMC_DCCL::PlanVariable, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMC_DCCL::PlanVariable, access_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMC_DCCL::PlanTransition, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMC_DCCL::PlanTransition, source_man_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMC_DCCL::PlanTransition, dest_man_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMC_DCCL::PlanTransition, conditions_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMC_DCCL::PlanSpecification, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMC_DCCL::PlanSpecification, plan_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMC_DCCL::PlanSpecification, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMC_DCCL::PlanSpecification, vnamespace_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMC_DCCL::PlanSpecification, start_man_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMC_DCCL::PlanSpecification, maneuvers_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMC_DCCL::PlanSpecification, transitions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMC_DCCL::PlanSpecification, start_actions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMC_DCCL::PlanSpecification, variables_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::IMC_DCCL::EstimatedState)},
  { 25, -1, sizeof(::IMC_DCCL::Goto)},
  { 40, -1, sizeof(::IMC_DCCL::FollowPath)},
  { 53, -1, sizeof(::IMC_DCCL::Loiter)},
  { 71, -1, sizeof(::IMC_DCCL::PathPoint)},
  { 79, -1, sizeof(::IMC_DCCL::Maneuver)},
  { 88, -1, sizeof(::IMC_DCCL::ParameterValue)},
  { 96, -1, sizeof(::IMC_DCCL::EntityParameter)},
  { 103, -1, sizeof(::IMC_DCCL::EntityParameters)},
  { 110, -1, sizeof(::IMC_DCCL::ManeuverID)},
  { 117, -1, sizeof(::IMC_DCCL::PlanManeuver)},
  { 125, -1, sizeof(::IMC_DCCL::PlanVariable)},
  { 134, -1, sizeof(::IMC_DCCL::PlanTransition)},
  { 142, -1, sizeof(::IMC_DCCL::PlanSpecification)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::IMC_DCCL::_EstimatedState_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::IMC_DCCL::_Goto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::IMC_DCCL::_FollowPath_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::IMC_DCCL::_Loiter_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::IMC_DCCL::_PathPoint_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::IMC_DCCL::_Maneuver_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::IMC_DCCL::_ParameterValue_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::IMC_DCCL::_EntityParameter_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::IMC_DCCL::_EntityParameters_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::IMC_DCCL::_ManeuverID_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::IMC_DCCL::_PlanManeuver_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::IMC_DCCL::_PlanVariable_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::IMC_DCCL::_PlanTransition_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::IMC_DCCL::_PlanSpecification_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "IMC_DCCL.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 14);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\016IMC_DCCL.proto\022\010IMC_DCCL\032\034dccl/option_"
      "extensions.proto\"\213\006\n\016EstimatedState\022$\n\003l"
      "at\030\001 \001(\002B\027\242\?\024 \003)\037\205\353Q\270\036\371\2771\037\205\353Q\270\036\371\?\022$\n\003lon"
      "\030\002 \001(\002B\027\242\?\024 \003)T\343\245\233\304 \t\3001T\343\245\233\304 \t@\022\'\n\006heigh"
      "t\030\003 \001(\002B\027\242\?\024 \001)\000\000\000\000\000@\217\3001\000\000\000\000\000X\273@\022\"\n\001x\030\004 "
      "\001(\002B\027\242\?\024 \001)\000\000\000\000\000\210\323\3001\000\000\000\000\000\210\323@\022\"\n\001y\030\005 \001(\002B"
      "\027\242\?\024 \001)\000\000\000\000\000\210\323\3001\000\000\000\000\000\210\323@\022\"\n\001z\030\006 \001(\002B\027\242\?\024"
      " \001)\000\000\000\000\000\000y\3001\000\000\000\000\000\000y@\022$\n\003phi\030\007 \001(\002B\027\242\?\024 \003"
      ")T\343\245\233\304 \t\3001T\343\245\233\304 \t@\022&\n\005theta\030\010 \001(\002B\027\242\?\024 \003"
      ")\037\205\353Q\270\036\371\2771\037\205\353Q\270\036\371\?\022$\n\003psi\030\t \001(\002B\027\242\?\024 \003)T"
      "\343\245\233\304 \t\3001T\343\245\233\304 \t@\022\"\n\001u\030\n \001(\002B\027\242\?\024 \001)\000\000\000\000\000"
      "\000$\3001\000\000\000\000\000\000$@\022\"\n\001v\030\013 \001(\002B\027\242\?\024 \001)\000\000\000\000\000\000$\3001"
      "\000\000\000\000\000\000$@\022\"\n\001w\030\014 \001(\002B\027\242\?\024 \001)\000\000\000\000\000\000$\3001\000\000\000\000"
      "\000\000$@\022#\n\002vx\030\r \001(\002B\027\242\?\024 \001)\000\000\000\000\000\000$\3001\000\000\000\000\000\000$"
      "@\022#\n\002vy\030\016 \001(\002B\027\242\?\024 \001)\000\000\000\000\000\000$\3001\000\000\000\000\000\000$@\022#"
      "\n\002vz\030\017 \001(\002B\027\242\?\024 \001)\000\000\000\000\000\000$\3001\000\000\000\000\000\000$@\022\"\n\001p"
      "\030\020 \001(\002B\027\242\?\024 \003)T\343\245\233\304 \t\3001T\343\245\233\304 \t@\022\"\n\001q\030\021 \001"
      "(\002B\027\242\?\024 \003)T\343\245\233\304 \t\3001T\343\245\233\304 \t@\022\"\n\001r\030\022 \001(\002B\027"
      "\242\?\024 \003)T\343\245\233\304 \t\3001T\343\245\233\304 \t@\022&\n\005depth\030\023 \001(\002B\027"
      "\242\?\024 \001)\000\000\000\000\000\000\360\2771\000\000\000\000\000\000y@\022)\n\010altitude\030\024 \001("
      "\002B\027\242\?\024 \001)\000\000\000\000\000\000\360\2771\000\000\000\000\000\210\263@:\n\242\?\007\010\336\002\020P(\004\"\225"
      "\003\n\004Goto\022&\n\007timeout\030\001 \001(\005B\025\242\?\022)\000\000\000\000\000\000\000\0001\000"
      "\000\000\000\340\377\357@\022$\n\003lat\030\002 \001(\002B\027\242\?\024 \003)\037\205\353Q\270\036\371\2771\037\205\353"
      "Q\270\036\371\?\022$\n\003lon\030\003 \001(\002B\027\242\?\024 \003)T\343\245\233\304 \t\3001T\343\245\233\304"
      " \t@\022\"\n\001z\030\004 \001(\002B\027\242\?\024 \001)\000\000\000\000\000\000y\3001\000\000\000\000\000\000y@\022"
      "!\n\007z_units\030\005 \001(\0162\020.IMC_DCCL.ZUnits\022&\n\005sp"
      "eed\030\006 \001(\002B\027\242\?\024 \001)\000\000\000\000\000@\237\3001\000\000\000\000\000@\237@\022)\n\013sp"
      "eed_units\030\007 \001(\0162\024.IMC_DCCL.SpeedUnits\022%\n"
      "\004roll\030\010 \001(\002B\027\242\?\024 \003)\000\000\000\000\000\000\360\2771o\022\203\300\312!\031@\022&\n\005"
      "pitch\030\t \001(\002B\027\242\?\024 \003)\000\000\000\000\000\000\360\2771o\022\203\300\312!\031@\022$\n\003"
      "yaw\030\n \001(\002B\027\242\?\024 \003)\000\000\000\000\000\000\360\2771o\022\203\300\312!\031@:\n\242\?\007\010"
      "\302\003\020P(\004\"\323\002\n\nFollowPath\022&\n\007timeout\030\001 \001(\005B\025"
      "\242\?\022)\000\000\000\000\000\000\000\0001\000\000\000\000\340\377\357@\022$\n\003lat\030\002 \001(\002B\027\242\?\024 "
      "\003)\037\205\353Q\270\036\371\2771\037\205\353Q\270\036\371\?\022$\n\003lon\030\003 \001(\002B\027\242\?\024 \003)"
      "T\343\245\233\304 \t\3001T\343\245\233\304 \t@\022\"\n\001z\030\004 \001(\002B\027\242\?\024 \001)\000\000\000\000"
      "\000\000y\3001\000\000\000\000\000\000y@\022!\n\007z_units\030\005 \001(\0162\020.IMC_DCC"
      "L.ZUnits\022&\n\005speed\030\006 \001(\002B\027\242\?\024 \001)\000\000\000\000\000@\237\3001"
      "\000\000\000\000\000@\237@\022)\n\013speed_units\030\007 \001(\0162\024.IMC_DCCL"
      ".SpeedUnits\022*\n\006points\030\010 \003(\0132\023.IMC_DCCL.P"
      "athPointB\005\242\?\002P\036:\013\242\?\010\010\311\003\020\350\007(\004\"\230\004\n\006Loiter\022"
      "&\n\007timeout\030\001 \001(\005B\025\242\?\022)\000\000\000\000\000\000\000\0001\000\000\000\000\340\377\357@\022"
      "$\n\003lat\030\002 \001(\002B\027\242\?\024 \003)\037\205\353Q\270\036\371\2771\037\205\353Q\270\036\371\?\022$\n"
      "\003lon\030\003 \001(\002B\027\242\?\024 \003)T\343\245\233\304 \t\3001T\343\245\233\304 \t@\022\"\n\001z"
      "\030\004 \001(\002B\027\242\?\024 \001)\000\000\000\000\000\000y\3001\000\000\000\000\000\000y@\022!\n\007z_uni"
      "ts\030\005 \001(\0162\020.IMC_DCCL.ZUnits\022\'\n\010duration\030\006"
      " \001(\005B\025\242\?\022)\000\000\000\000\000\000\000\0001\000\000\000\000\000\030\305@\022&\n\005speed\030\007 \001"
      "(\002B\027\242\?\024 \001)\000\000\000\000\000@\237\3001\000\000\000\000\000@\237@\022)\n\013speed_uni"
      "ts\030\010 \001(\0162\024.IMC_DCCL.SpeedUnits\022\"\n\004type\030\t"
      " \001(\0162\024.IMC_DCCL.LoiterType\022\'\n\006radius\030\n \001"
      "(\002B\027\242\?\024 \001)\000\000\000\000\000\000\360\?1\000\000\000\000\000j\370@\022\'\n\006length\030\013 "
      "\001(\002B\027\242\?\024 \001)\000\000\000\000\000\000\360\?1\000\000\000\000\000j\370@\022(\n\007bearing\030"
      "\014 \001(\002B\027\242\?\024 \003)\000\000\000\000\000\000\000\0001o\022\203\300\312!\031@\022*\n\tdirect"
      "ion\030\r \001(\0162\027.IMC_DCCL.DirectionType:\013\242\?\010\010"
      "\305\003\020\350\007(\004\"\203\001\n\tPathPoint\022\"\n\001x\030\001 \001(\002B\027\242\?\024 \001)"
      "\000\000\000\000\000\210\323\3001\000\000\000\000\000\210\323@\022\"\n\001y\030\002 \001(\002B\027\242\?\024 \001)\000\000\000\000"
      "\000\210\323\3001\000\000\000\000\000\210\323@\022\"\n\001z\030\003 \001(\002B\027\242\?\024 \001)\000\000\000\000\000\000y\300"
      "1\000\000\000\000\000\000y@:\n\242\?\007\010\312\003\020P(\004\"\262\001\n\010Maneuver\022\'\n\rgo"
      "to_maneuver\030\001 \001(\0132\016.IMC_DCCL.GotoH\000\0223\n\023f"
      "ollowpath_maneuver\030\002 \001(\0132\024.IMC_DCCL.Foll"
      "owPathH\000\022+\n\017loiter_maneuver\030\003 \001(\0132\020.IMC_"
      "DCCL.LoiterH\000:\n\242\?\007\010\001\020\254\002(\004B\017\n\rManeuverUni"
      "on\"\217\001\n\016ParameterValue\022/\n\014value_number\030\001 "
      "\001(\002B\027\242\?\024 \001)\000\000\000\000\000\000y\3001\000\000\000\000\000\000y@H\000\022)\n\nvalue_"
      "bool\030\002 \001(\0162\023.IMC_DCCL.FalseTrueH\000:\n\242\?\007\010\002"
      "\020\254\002(\004B\025\n\023ParameterValueUnion\"m\n\017EntityPa"
      "rameter\022%\n\004name\030\001 \001(\0162\027.IMC_DCCL.Paramet"
      "erName\022\'\n\005value\030\002 \001(\0132\030.IMC_DCCL.Paramet"
      "erValue:\n\242\?\007\010\241\006\020\024(\004\"t\n\020EntityParameters\022"
      "\"\n\004name\030\001 \001(\0162\024.IMC_DCCL.EntityName\0220\n\006p"
      "arams\030\002 \003(\0132\031.IMC_DCCL.EntityParameterB\005"
      "\242\?\002P\003:\n\242\?\007\010\242\006\020((\004\"v\n\nManeuverID\022-\n\rmaneu"
      "ver_type\030\001 \001(\0162\026.IMC_DCCL.ManeuverType\022."
      "\n\017maneuver_number\030\002 \001(\005B\025\242\?\022)\000\000\000\000\000\000\000\0001\000\000"
      "\000\000\000\000I@:\t\242\?\006\010\003\020\036(\004\"\242\001\n\014PlanManeuver\022)\n\013ma"
      "neuver_id\030\001 \001(\0132\024.IMC_DCCL.ManeuverID\022 \n"
      "\004data\030\002 \001(\0132\022.IMC_DCCL.Maneuver\0228\n\rstart"
      "_actions\030\003 \003(\0132\032.IMC_DCCL.EntityParamete"
      "rsB\005\242\?\002P\005:\013\242\?\010\010\250\004\020\220\003(\004\"\212\001\n\014PlanVariable\022"
      "\023\n\004name\030\001 \001(\tB\005\242\?\002H\002\022\024\n\005value\030\002 \001(\tB\005\242\?\002"
      "H\002\022\034\n\004type\030\003 \001(\0162\016.IMC_DCCL.Type\022$\n\006acce"
      "ss\030\004 \001(\0162\024.IMC_DCCL.AccessType:\013\242\?\010\010\261\004\020\220"
      "\003(\004\"\242\001\n\016PlanTransition\022(\n\nsource_man\030\001 \001"
      "(\0132\024.IMC_DCCL.ManeuverID\022&\n\010dest_man\030\002 \001"
      "(\0132\024.IMC_DCCL.ManeuverID\0221\n\nconditions\030\003"
      " \001(\0162\035.IMC_DCCL.TransitionCondition:\013\242\?\010"
      "\010\251\004\020\220\003(\004\"\357\002\n\021PlanSpecification\022\026\n\007plan_i"
      "d\030\001 \001(\tB\005\242\?\002H\024\022\032\n\013description\030\002 \001(\tB\005\242\?\002"
      "H\002\022\031\n\nvnamespace\030\003 \001(\tB\005\242\?\002H\002\022*\n\014start_m"
      "an_id\030\004 \001(\0132\024.IMC_DCCL.ManeuverID\0220\n\tman"
      "euvers\030\005 \003(\0132\026.IMC_DCCL.PlanManeuverB\005\242\?"
      "\002P\036\0224\n\013transitions\030\006 \003(\0132\030.IMC_DCCL.Plan"
      "TransitionB\005\242\?\002P\036\0228\n\rstart_actions\030\007 \003(\013"
      "2\032.IMC_DCCL.EntityParametersB\005\242\?\002P\007\0220\n\tv"
      "ariables\030\010 \003(\0132\026.IMC_DCCL.PlanVariableB\005"
      "\242\?\002P\005:\013\242\?\010\010\247\004\020\300>(\004*7\n\006ZUnits\022\010\n\004NONE\020\000\022\t"
      "\n\005DEPTH\020\001\022\014\n\010ALTITUDE\020\002\022\n\n\006HEIGHT\020\003*4\n\nS"
      "peedUnits\022\r\n\tMETERS_PS\020\000\022\007\n\003RPM\020\001\022\016\n\nPER"
      "CENTAGE\020\002*L\n\nLoiterType\022\013\n\007DEFAULT\020\000\022\014\n\010"
      "CIRCULAR\020\001\022\r\n\tRACETRACK\020\002\022\t\n\005EIGHT\020\003\022\t\n\005"
      "HOVER\020\004*A\n\rDirectionType\022\010\n\004VDEP\020\000\022\n\n\006CL"
      "OCKW\020\001\022\013\n\007CCLOCKW\020\002\022\r\n\tIWINDCURR\020\003*4\n\014Ma"
      "neuverType\022\010\n\004GOTO\020\000\022\016\n\nFOLLOWPATH\020\001\022\n\n\006"
      "LOITER\020\002*;\n\rParameterName\022\n\n\006ACTIVE\020\000\022\036\n"
      "\032BOTTOM_TRACK_MINIMUM_DEPTH\020\001* \n\tFalseTr"
      "ue\022\t\n\005FALSE\020\000\022\010\n\004TRUE\020\001*>\n\nEntityName\022\020\n"
      "\014PATH_CONTROL\020\000\022\n\n\006RANGER\020\001\022\022\n\016ACOUSTIC_"
      "MODEM\020\002*)\n\023TransitionCondition\022\022\n\016MANEUV"
      "ERISDONE\020\000*6\n\004Type\022\013\n\007BOOLEAN\020\000\022\n\n\006NUMBE"
      "R\020\001\022\010\n\004TEXT\020\002\022\013\n\007MESSAGE\020\003*.\n\nAccessType"
      "\022\t\n\005INPUT\020\000\022\n\n\006OUTPUT\020\001\022\t\n\005LOCAL\020\002b\006prot"
      "o3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 4402);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "IMC_DCCL.proto", &protobuf_RegisterTypes);
  ::protobuf_dccl_2foption_5fextensions_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_IMC_5fDCCL_2eproto
namespace IMC_DCCL {
const ::google::protobuf::EnumDescriptor* ZUnits_descriptor() {
  protobuf_IMC_5fDCCL_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_IMC_5fDCCL_2eproto::file_level_enum_descriptors[0];
}
bool ZUnits_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* SpeedUnits_descriptor() {
  protobuf_IMC_5fDCCL_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_IMC_5fDCCL_2eproto::file_level_enum_descriptors[1];
}
bool SpeedUnits_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* LoiterType_descriptor() {
  protobuf_IMC_5fDCCL_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_IMC_5fDCCL_2eproto::file_level_enum_descriptors[2];
}
bool LoiterType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* DirectionType_descriptor() {
  protobuf_IMC_5fDCCL_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_IMC_5fDCCL_2eproto::file_level_enum_descriptors[3];
}
bool DirectionType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ManeuverType_descriptor() {
  protobuf_IMC_5fDCCL_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_IMC_5fDCCL_2eproto::file_level_enum_descriptors[4];
}
bool ManeuverType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ParameterName_descriptor() {
  protobuf_IMC_5fDCCL_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_IMC_5fDCCL_2eproto::file_level_enum_descriptors[5];
}
bool ParameterName_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* FalseTrue_descriptor() {
  protobuf_IMC_5fDCCL_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_IMC_5fDCCL_2eproto::file_level_enum_descriptors[6];
}
bool FalseTrue_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EntityName_descriptor() {
  protobuf_IMC_5fDCCL_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_IMC_5fDCCL_2eproto::file_level_enum_descriptors[7];
}
bool EntityName_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* TransitionCondition_descriptor() {
  protobuf_IMC_5fDCCL_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_IMC_5fDCCL_2eproto::file_level_enum_descriptors[8];
}
bool TransitionCondition_IsValid(int value) {
  switch (value) {
    case 0:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* Type_descriptor() {
  protobuf_IMC_5fDCCL_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_IMC_5fDCCL_2eproto::file_level_enum_descriptors[9];
}
bool Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* AccessType_descriptor() {
  protobuf_IMC_5fDCCL_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_IMC_5fDCCL_2eproto::file_level_enum_descriptors[10];
}
bool AccessType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void EstimatedState::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EstimatedState::kLatFieldNumber;
const int EstimatedState::kLonFieldNumber;
const int EstimatedState::kHeightFieldNumber;
const int EstimatedState::kXFieldNumber;
const int EstimatedState::kYFieldNumber;
const int EstimatedState::kZFieldNumber;
const int EstimatedState::kPhiFieldNumber;
const int EstimatedState::kThetaFieldNumber;
const int EstimatedState::kPsiFieldNumber;
const int EstimatedState::kUFieldNumber;
const int EstimatedState::kVFieldNumber;
const int EstimatedState::kWFieldNumber;
const int EstimatedState::kVxFieldNumber;
const int EstimatedState::kVyFieldNumber;
const int EstimatedState::kVzFieldNumber;
const int EstimatedState::kPFieldNumber;
const int EstimatedState::kQFieldNumber;
const int EstimatedState::kRFieldNumber;
const int EstimatedState::kDepthFieldNumber;
const int EstimatedState::kAltitudeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EstimatedState::EstimatedState()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_IMC_5fDCCL_2eproto::scc_info_EstimatedState.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:IMC_DCCL.EstimatedState)
}
EstimatedState::EstimatedState(const EstimatedState& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&lat_, &from.lat_,
    static_cast<size_t>(reinterpret_cast<char*>(&altitude_) -
    reinterpret_cast<char*>(&lat_)) + sizeof(altitude_));
  // @@protoc_insertion_point(copy_constructor:IMC_DCCL.EstimatedState)
}

void EstimatedState::SharedCtor() {
  ::memset(&lat_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&altitude_) -
      reinterpret_cast<char*>(&lat_)) + sizeof(altitude_));
}

EstimatedState::~EstimatedState() {
  // @@protoc_insertion_point(destructor:IMC_DCCL.EstimatedState)
  SharedDtor();
}

void EstimatedState::SharedDtor() {
}

void EstimatedState::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* EstimatedState::descriptor() {
  ::protobuf_IMC_5fDCCL_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IMC_5fDCCL_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EstimatedState& EstimatedState::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_IMC_5fDCCL_2eproto::scc_info_EstimatedState.base);
  return *internal_default_instance();
}


void EstimatedState::Clear() {
// @@protoc_insertion_point(message_clear_start:IMC_DCCL.EstimatedState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&lat_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&altitude_) -
      reinterpret_cast<char*>(&lat_)) + sizeof(altitude_));
  _internal_metadata_.Clear();
}

bool EstimatedState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:IMC_DCCL.EstimatedState)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float lat = 1 [(.dccl.field) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &lat_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float lon = 2 [(.dccl.field) = {
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &lon_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float height = 3 [(.dccl.field) = {
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float x = 4 [(.dccl.field) = {
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float y = 5 [(.dccl.field) = {
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float z = 6 [(.dccl.field) = {
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float phi = 7 [(.dccl.field) = {
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 61 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &phi_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float theta = 8 [(.dccl.field) = {
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(69u /* 69 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &theta_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float psi = 9 [(.dccl.field) = {
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(77u /* 77 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &psi_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float u = 10 [(.dccl.field) = {
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(85u /* 85 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &u_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float v = 11 [(.dccl.field) = {
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(93u /* 93 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &v_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float w = 12 [(.dccl.field) = {
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(101u /* 101 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &w_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float vx = 13 [(.dccl.field) = {
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(109u /* 109 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &vx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float vy = 14 [(.dccl.field) = {
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(117u /* 117 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &vy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float vz = 15 [(.dccl.field) = {
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(125u /* 125 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &vz_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float p = 16 [(.dccl.field) = {
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(133u /* 133 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &p_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float q = 17 [(.dccl.field) = {
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(141u /* 141 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &q_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float r = 18 [(.dccl.field) = {
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(149u /* 149 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &r_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float depth = 19 [(.dccl.field) = {
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(157u /* 157 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &depth_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float altitude = 20 [(.dccl.field) = {
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(165u /* 165 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &altitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:IMC_DCCL.EstimatedState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:IMC_DCCL.EstimatedState)
  return false;
#undef DO_
}

void EstimatedState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:IMC_DCCL.EstimatedState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float lat = 1 [(.dccl.field) = {
  if (this->lat() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->lat(), output);
  }

  // float lon = 2 [(.dccl.field) = {
  if (this->lon() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->lon(), output);
  }

  // float height = 3 [(.dccl.field) = {
  if (this->height() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->height(), output);
  }

  // float x = 4 [(.dccl.field) = {
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->x(), output);
  }

  // float y = 5 [(.dccl.field) = {
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->y(), output);
  }

  // float z = 6 [(.dccl.field) = {
  if (this->z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->z(), output);
  }

  // float phi = 7 [(.dccl.field) = {
  if (this->phi() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->phi(), output);
  }

  // float theta = 8 [(.dccl.field) = {
  if (this->theta() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->theta(), output);
  }

  // float psi = 9 [(.dccl.field) = {
  if (this->psi() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->psi(), output);
  }

  // float u = 10 [(.dccl.field) = {
  if (this->u() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(10, this->u(), output);
  }

  // float v = 11 [(.dccl.field) = {
  if (this->v() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(11, this->v(), output);
  }

  // float w = 12 [(.dccl.field) = {
  if (this->w() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(12, this->w(), output);
  }

  // float vx = 13 [(.dccl.field) = {
  if (this->vx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(13, this->vx(), output);
  }

  // float vy = 14 [(.dccl.field) = {
  if (this->vy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(14, this->vy(), output);
  }

  // float vz = 15 [(.dccl.field) = {
  if (this->vz() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(15, this->vz(), output);
  }

  // float p = 16 [(.dccl.field) = {
  if (this->p() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(16, this->p(), output);
  }

  // float q = 17 [(.dccl.field) = {
  if (this->q() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(17, this->q(), output);
  }

  // float r = 18 [(.dccl.field) = {
  if (this->r() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(18, this->r(), output);
  }

  // float depth = 19 [(.dccl.field) = {
  if (this->depth() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(19, this->depth(), output);
  }

  // float altitude = 20 [(.dccl.field) = {
  if (this->altitude() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(20, this->altitude(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:IMC_DCCL.EstimatedState)
}

::google::protobuf::uint8* EstimatedState::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:IMC_DCCL.EstimatedState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float lat = 1 [(.dccl.field) = {
  if (this->lat() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->lat(), target);
  }

  // float lon = 2 [(.dccl.field) = {
  if (this->lon() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->lon(), target);
  }

  // float height = 3 [(.dccl.field) = {
  if (this->height() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->height(), target);
  }

  // float x = 4 [(.dccl.field) = {
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->x(), target);
  }

  // float y = 5 [(.dccl.field) = {
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->y(), target);
  }

  // float z = 6 [(.dccl.field) = {
  if (this->z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->z(), target);
  }

  // float phi = 7 [(.dccl.field) = {
  if (this->phi() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->phi(), target);
  }

  // float theta = 8 [(.dccl.field) = {
  if (this->theta() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->theta(), target);
  }

  // float psi = 9 [(.dccl.field) = {
  if (this->psi() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(9, this->psi(), target);
  }

  // float u = 10 [(.dccl.field) = {
  if (this->u() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(10, this->u(), target);
  }

  // float v = 11 [(.dccl.field) = {
  if (this->v() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(11, this->v(), target);
  }

  // float w = 12 [(.dccl.field) = {
  if (this->w() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(12, this->w(), target);
  }

  // float vx = 13 [(.dccl.field) = {
  if (this->vx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(13, this->vx(), target);
  }

  // float vy = 14 [(.dccl.field) = {
  if (this->vy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(14, this->vy(), target);
  }

  // float vz = 15 [(.dccl.field) = {
  if (this->vz() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(15, this->vz(), target);
  }

  // float p = 16 [(.dccl.field) = {
  if (this->p() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(16, this->p(), target);
  }

  // float q = 17 [(.dccl.field) = {
  if (this->q() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(17, this->q(), target);
  }

  // float r = 18 [(.dccl.field) = {
  if (this->r() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(18, this->r(), target);
  }

  // float depth = 19 [(.dccl.field) = {
  if (this->depth() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(19, this->depth(), target);
  }

  // float altitude = 20 [(.dccl.field) = {
  if (this->altitude() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(20, this->altitude(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IMC_DCCL.EstimatedState)
  return target;
}

size_t EstimatedState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IMC_DCCL.EstimatedState)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float lat = 1 [(.dccl.field) = {
  if (this->lat() != 0) {
    total_size += 1 + 4;
  }

  // float lon = 2 [(.dccl.field) = {
  if (this->lon() != 0) {
    total_size += 1 + 4;
  }

  // float height = 3 [(.dccl.field) = {
  if (this->height() != 0) {
    total_size += 1 + 4;
  }

  // float x = 4 [(.dccl.field) = {
  if (this->x() != 0) {
    total_size += 1 + 4;
  }

  // float y = 5 [(.dccl.field) = {
  if (this->y() != 0) {
    total_size += 1 + 4;
  }

  // float z = 6 [(.dccl.field) = {
  if (this->z() != 0) {
    total_size += 1 + 4;
  }

  // float phi = 7 [(.dccl.field) = {
  if (this->phi() != 0) {
    total_size += 1 + 4;
  }

  // float theta = 8 [(.dccl.field) = {
  if (this->theta() != 0) {
    total_size += 1 + 4;
  }

  // float psi = 9 [(.dccl.field) = {
  if (this->psi() != 0) {
    total_size += 1 + 4;
  }

  // float u = 10 [(.dccl.field) = {
  if (this->u() != 0) {
    total_size += 1 + 4;
  }

  // float v = 11 [(.dccl.field) = {
  if (this->v() != 0) {
    total_size += 1 + 4;
  }

  // float w = 12 [(.dccl.field) = {
  if (this->w() != 0) {
    total_size += 1 + 4;
  }

  // float vx = 13 [(.dccl.field) = {
  if (this->vx() != 0) {
    total_size += 1 + 4;
  }

  // float vy = 14 [(.dccl.field) = {
  if (this->vy() != 0) {
    total_size += 1 + 4;
  }

  // float vz = 15 [(.dccl.field) = {
  if (this->vz() != 0) {
    total_size += 1 + 4;
  }

  // float p = 16 [(.dccl.field) = {
  if (this->p() != 0) {
    total_size += 2 + 4;
  }

  // float q = 17 [(.dccl.field) = {
  if (this->q() != 0) {
    total_size += 2 + 4;
  }

  // float r = 18 [(.dccl.field) = {
  if (this->r() != 0) {
    total_size += 2 + 4;
  }

  // float depth = 19 [(.dccl.field) = {
  if (this->depth() != 0) {
    total_size += 2 + 4;
  }

  // float altitude = 20 [(.dccl.field) = {
  if (this->altitude() != 0) {
    total_size += 2 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EstimatedState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IMC_DCCL.EstimatedState)
  GOOGLE_DCHECK_NE(&from, this);
  const EstimatedState* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EstimatedState>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IMC_DCCL.EstimatedState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IMC_DCCL.EstimatedState)
    MergeFrom(*source);
  }
}

void EstimatedState::MergeFrom(const EstimatedState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IMC_DCCL.EstimatedState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.lat() != 0) {
    set_lat(from.lat());
  }
  if (from.lon() != 0) {
    set_lon(from.lon());
  }
  if (from.height() != 0) {
    set_height(from.height());
  }
  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.z() != 0) {
    set_z(from.z());
  }
  if (from.phi() != 0) {
    set_phi(from.phi());
  }
  if (from.theta() != 0) {
    set_theta(from.theta());
  }
  if (from.psi() != 0) {
    set_psi(from.psi());
  }
  if (from.u() != 0) {
    set_u(from.u());
  }
  if (from.v() != 0) {
    set_v(from.v());
  }
  if (from.w() != 0) {
    set_w(from.w());
  }
  if (from.vx() != 0) {
    set_vx(from.vx());
  }
  if (from.vy() != 0) {
    set_vy(from.vy());
  }
  if (from.vz() != 0) {
    set_vz(from.vz());
  }
  if (from.p() != 0) {
    set_p(from.p());
  }
  if (from.q() != 0) {
    set_q(from.q());
  }
  if (from.r() != 0) {
    set_r(from.r());
  }
  if (from.depth() != 0) {
    set_depth(from.depth());
  }
  if (from.altitude() != 0) {
    set_altitude(from.altitude());
  }
}

void EstimatedState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IMC_DCCL.EstimatedState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EstimatedState::CopyFrom(const EstimatedState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IMC_DCCL.EstimatedState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EstimatedState::IsInitialized() const {
  return true;
}

void EstimatedState::Swap(EstimatedState* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EstimatedState::InternalSwap(EstimatedState* other) {
  using std::swap;
  swap(lat_, other->lat_);
  swap(lon_, other->lon_);
  swap(height_, other->height_);
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
  swap(phi_, other->phi_);
  swap(theta_, other->theta_);
  swap(psi_, other->psi_);
  swap(u_, other->u_);
  swap(v_, other->v_);
  swap(w_, other->w_);
  swap(vx_, other->vx_);
  swap(vy_, other->vy_);
  swap(vz_, other->vz_);
  swap(p_, other->p_);
  swap(q_, other->q_);
  swap(r_, other->r_);
  swap(depth_, other->depth_);
  swap(altitude_, other->altitude_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EstimatedState::GetMetadata() const {
  protobuf_IMC_5fDCCL_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IMC_5fDCCL_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Goto::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Goto::kTimeoutFieldNumber;
const int Goto::kLatFieldNumber;
const int Goto::kLonFieldNumber;
const int Goto::kZFieldNumber;
const int Goto::kZUnitsFieldNumber;
const int Goto::kSpeedFieldNumber;
const int Goto::kSpeedUnitsFieldNumber;
const int Goto::kRollFieldNumber;
const int Goto::kPitchFieldNumber;
const int Goto::kYawFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Goto::Goto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_IMC_5fDCCL_2eproto::scc_info_Goto.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:IMC_DCCL.Goto)
}
Goto::Goto(const Goto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&timeout_, &from.timeout_,
    static_cast<size_t>(reinterpret_cast<char*>(&yaw_) -
    reinterpret_cast<char*>(&timeout_)) + sizeof(yaw_));
  // @@protoc_insertion_point(copy_constructor:IMC_DCCL.Goto)
}

void Goto::SharedCtor() {
  ::memset(&timeout_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&yaw_) -
      reinterpret_cast<char*>(&timeout_)) + sizeof(yaw_));
}

Goto::~Goto() {
  // @@protoc_insertion_point(destructor:IMC_DCCL.Goto)
  SharedDtor();
}

void Goto::SharedDtor() {
}

void Goto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Goto::descriptor() {
  ::protobuf_IMC_5fDCCL_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IMC_5fDCCL_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Goto& Goto::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_IMC_5fDCCL_2eproto::scc_info_Goto.base);
  return *internal_default_instance();
}


void Goto::Clear() {
// @@protoc_insertion_point(message_clear_start:IMC_DCCL.Goto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&timeout_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&yaw_) -
      reinterpret_cast<char*>(&timeout_)) + sizeof(yaw_));
  _internal_metadata_.Clear();
}

bool Goto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:IMC_DCCL.Goto)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 timeout = 1 [(.dccl.field) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &timeout_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float lat = 2 [(.dccl.field) = {
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &lat_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float lon = 3 [(.dccl.field) = {
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &lon_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float z = 4 [(.dccl.field) = {
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .IMC_DCCL.ZUnits z_units = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_z_units(static_cast< ::IMC_DCCL::ZUnits >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float speed = 6 [(.dccl.field) = {
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &speed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .IMC_DCCL.SpeedUnits speed_units = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_speed_units(static_cast< ::IMC_DCCL::SpeedUnits >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float roll = 8 [(.dccl.field) = {
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(69u /* 69 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &roll_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float pitch = 9 [(.dccl.field) = {
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(77u /* 77 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &pitch_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float yaw = 10 [(.dccl.field) = {
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(85u /* 85 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &yaw_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:IMC_DCCL.Goto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:IMC_DCCL.Goto)
  return false;
#undef DO_
}

void Goto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:IMC_DCCL.Goto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 timeout = 1 [(.dccl.field) = {
  if (this->timeout() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->timeout(), output);
  }

  // float lat = 2 [(.dccl.field) = {
  if (this->lat() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->lat(), output);
  }

  // float lon = 3 [(.dccl.field) = {
  if (this->lon() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->lon(), output);
  }

  // float z = 4 [(.dccl.field) = {
  if (this->z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->z(), output);
  }

  // .IMC_DCCL.ZUnits z_units = 5;
  if (this->z_units() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->z_units(), output);
  }

  // float speed = 6 [(.dccl.field) = {
  if (this->speed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->speed(), output);
  }

  // .IMC_DCCL.SpeedUnits speed_units = 7;
  if (this->speed_units() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->speed_units(), output);
  }

  // float roll = 8 [(.dccl.field) = {
  if (this->roll() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->roll(), output);
  }

  // float pitch = 9 [(.dccl.field) = {
  if (this->pitch() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->pitch(), output);
  }

  // float yaw = 10 [(.dccl.field) = {
  if (this->yaw() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(10, this->yaw(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:IMC_DCCL.Goto)
}

::google::protobuf::uint8* Goto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:IMC_DCCL.Goto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 timeout = 1 [(.dccl.field) = {
  if (this->timeout() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->timeout(), target);
  }

  // float lat = 2 [(.dccl.field) = {
  if (this->lat() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->lat(), target);
  }

  // float lon = 3 [(.dccl.field) = {
  if (this->lon() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->lon(), target);
  }

  // float z = 4 [(.dccl.field) = {
  if (this->z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->z(), target);
  }

  // .IMC_DCCL.ZUnits z_units = 5;
  if (this->z_units() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->z_units(), target);
  }

  // float speed = 6 [(.dccl.field) = {
  if (this->speed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->speed(), target);
  }

  // .IMC_DCCL.SpeedUnits speed_units = 7;
  if (this->speed_units() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->speed_units(), target);
  }

  // float roll = 8 [(.dccl.field) = {
  if (this->roll() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->roll(), target);
  }

  // float pitch = 9 [(.dccl.field) = {
  if (this->pitch() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(9, this->pitch(), target);
  }

  // float yaw = 10 [(.dccl.field) = {
  if (this->yaw() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(10, this->yaw(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IMC_DCCL.Goto)
  return target;
}

size_t Goto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IMC_DCCL.Goto)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 timeout = 1 [(.dccl.field) = {
  if (this->timeout() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->timeout());
  }

  // float lat = 2 [(.dccl.field) = {
  if (this->lat() != 0) {
    total_size += 1 + 4;
  }

  // float lon = 3 [(.dccl.field) = {
  if (this->lon() != 0) {
    total_size += 1 + 4;
  }

  // float z = 4 [(.dccl.field) = {
  if (this->z() != 0) {
    total_size += 1 + 4;
  }

  // .IMC_DCCL.ZUnits z_units = 5;
  if (this->z_units() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->z_units());
  }

  // float speed = 6 [(.dccl.field) = {
  if (this->speed() != 0) {
    total_size += 1 + 4;
  }

  // .IMC_DCCL.SpeedUnits speed_units = 7;
  if (this->speed_units() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->speed_units());
  }

  // float roll = 8 [(.dccl.field) = {
  if (this->roll() != 0) {
    total_size += 1 + 4;
  }

  // float pitch = 9 [(.dccl.field) = {
  if (this->pitch() != 0) {
    total_size += 1 + 4;
  }

  // float yaw = 10 [(.dccl.field) = {
  if (this->yaw() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Goto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IMC_DCCL.Goto)
  GOOGLE_DCHECK_NE(&from, this);
  const Goto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Goto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IMC_DCCL.Goto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IMC_DCCL.Goto)
    MergeFrom(*source);
  }
}

void Goto::MergeFrom(const Goto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IMC_DCCL.Goto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.timeout() != 0) {
    set_timeout(from.timeout());
  }
  if (from.lat() != 0) {
    set_lat(from.lat());
  }
  if (from.lon() != 0) {
    set_lon(from.lon());
  }
  if (from.z() != 0) {
    set_z(from.z());
  }
  if (from.z_units() != 0) {
    set_z_units(from.z_units());
  }
  if (from.speed() != 0) {
    set_speed(from.speed());
  }
  if (from.speed_units() != 0) {
    set_speed_units(from.speed_units());
  }
  if (from.roll() != 0) {
    set_roll(from.roll());
  }
  if (from.pitch() != 0) {
    set_pitch(from.pitch());
  }
  if (from.yaw() != 0) {
    set_yaw(from.yaw());
  }
}

void Goto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IMC_DCCL.Goto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Goto::CopyFrom(const Goto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IMC_DCCL.Goto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Goto::IsInitialized() const {
  return true;
}

void Goto::Swap(Goto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Goto::InternalSwap(Goto* other) {
  using std::swap;
  swap(timeout_, other->timeout_);
  swap(lat_, other->lat_);
  swap(lon_, other->lon_);
  swap(z_, other->z_);
  swap(z_units_, other->z_units_);
  swap(speed_, other->speed_);
  swap(speed_units_, other->speed_units_);
  swap(roll_, other->roll_);
  swap(pitch_, other->pitch_);
  swap(yaw_, other->yaw_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Goto::GetMetadata() const {
  protobuf_IMC_5fDCCL_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IMC_5fDCCL_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FollowPath::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FollowPath::kTimeoutFieldNumber;
const int FollowPath::kLatFieldNumber;
const int FollowPath::kLonFieldNumber;
const int FollowPath::kZFieldNumber;
const int FollowPath::kZUnitsFieldNumber;
const int FollowPath::kSpeedFieldNumber;
const int FollowPath::kSpeedUnitsFieldNumber;
const int FollowPath::kPointsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FollowPath::FollowPath()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_IMC_5fDCCL_2eproto::scc_info_FollowPath.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:IMC_DCCL.FollowPath)
}
FollowPath::FollowPath(const FollowPath& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      points_(from.points_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&timeout_, &from.timeout_,
    static_cast<size_t>(reinterpret_cast<char*>(&speed_units_) -
    reinterpret_cast<char*>(&timeout_)) + sizeof(speed_units_));
  // @@protoc_insertion_point(copy_constructor:IMC_DCCL.FollowPath)
}

void FollowPath::SharedCtor() {
  ::memset(&timeout_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&speed_units_) -
      reinterpret_cast<char*>(&timeout_)) + sizeof(speed_units_));
}

FollowPath::~FollowPath() {
  // @@protoc_insertion_point(destructor:IMC_DCCL.FollowPath)
  SharedDtor();
}

void FollowPath::SharedDtor() {
}

void FollowPath::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FollowPath::descriptor() {
  ::protobuf_IMC_5fDCCL_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IMC_5fDCCL_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FollowPath& FollowPath::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_IMC_5fDCCL_2eproto::scc_info_FollowPath.base);
  return *internal_default_instance();
}


void FollowPath::Clear() {
// @@protoc_insertion_point(message_clear_start:IMC_DCCL.FollowPath)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  points_.Clear();
  ::memset(&timeout_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&speed_units_) -
      reinterpret_cast<char*>(&timeout_)) + sizeof(speed_units_));
  _internal_metadata_.Clear();
}

bool FollowPath::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:IMC_DCCL.FollowPath)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 timeout = 1 [(.dccl.field) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &timeout_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float lat = 2 [(.dccl.field) = {
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &lat_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float lon = 3 [(.dccl.field) = {
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &lon_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float z = 4 [(.dccl.field) = {
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .IMC_DCCL.ZUnits z_units = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_z_units(static_cast< ::IMC_DCCL::ZUnits >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float speed = 6 [(.dccl.field) = {
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &speed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .IMC_DCCL.SpeedUnits speed_units = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_speed_units(static_cast< ::IMC_DCCL::SpeedUnits >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .IMC_DCCL.PathPoint points = 8 [(.dccl.field) = {
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_points()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:IMC_DCCL.FollowPath)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:IMC_DCCL.FollowPath)
  return false;
#undef DO_
}

void FollowPath::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:IMC_DCCL.FollowPath)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 timeout = 1 [(.dccl.field) = {
  if (this->timeout() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->timeout(), output);
  }

  // float lat = 2 [(.dccl.field) = {
  if (this->lat() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->lat(), output);
  }

  // float lon = 3 [(.dccl.field) = {
  if (this->lon() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->lon(), output);
  }

  // float z = 4 [(.dccl.field) = {
  if (this->z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->z(), output);
  }

  // .IMC_DCCL.ZUnits z_units = 5;
  if (this->z_units() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->z_units(), output);
  }

  // float speed = 6 [(.dccl.field) = {
  if (this->speed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->speed(), output);
  }

  // .IMC_DCCL.SpeedUnits speed_units = 7;
  if (this->speed_units() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->speed_units(), output);
  }

  // repeated .IMC_DCCL.PathPoint points = 8 [(.dccl.field) = {
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->points_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8,
      this->points(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:IMC_DCCL.FollowPath)
}

::google::protobuf::uint8* FollowPath::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:IMC_DCCL.FollowPath)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 timeout = 1 [(.dccl.field) = {
  if (this->timeout() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->timeout(), target);
  }

  // float lat = 2 [(.dccl.field) = {
  if (this->lat() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->lat(), target);
  }

  // float lon = 3 [(.dccl.field) = {
  if (this->lon() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->lon(), target);
  }

  // float z = 4 [(.dccl.field) = {
  if (this->z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->z(), target);
  }

  // .IMC_DCCL.ZUnits z_units = 5;
  if (this->z_units() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->z_units(), target);
  }

  // float speed = 6 [(.dccl.field) = {
  if (this->speed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->speed(), target);
  }

  // .IMC_DCCL.SpeedUnits speed_units = 7;
  if (this->speed_units() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->speed_units(), target);
  }

  // repeated .IMC_DCCL.PathPoint points = 8 [(.dccl.field) = {
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->points_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->points(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IMC_DCCL.FollowPath)
  return target;
}

size_t FollowPath::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IMC_DCCL.FollowPath)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .IMC_DCCL.PathPoint points = 8 [(.dccl.field) = {
  {
    unsigned int count = static_cast<unsigned int>(this->points_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->points(static_cast<int>(i)));
    }
  }

  // int32 timeout = 1 [(.dccl.field) = {
  if (this->timeout() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->timeout());
  }

  // float lat = 2 [(.dccl.field) = {
  if (this->lat() != 0) {
    total_size += 1 + 4;
  }

  // float lon = 3 [(.dccl.field) = {
  if (this->lon() != 0) {
    total_size += 1 + 4;
  }

  // float z = 4 [(.dccl.field) = {
  if (this->z() != 0) {
    total_size += 1 + 4;
  }

  // .IMC_DCCL.ZUnits z_units = 5;
  if (this->z_units() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->z_units());
  }

  // float speed = 6 [(.dccl.field) = {
  if (this->speed() != 0) {
    total_size += 1 + 4;
  }

  // .IMC_DCCL.SpeedUnits speed_units = 7;
  if (this->speed_units() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->speed_units());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FollowPath::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IMC_DCCL.FollowPath)
  GOOGLE_DCHECK_NE(&from, this);
  const FollowPath* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FollowPath>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IMC_DCCL.FollowPath)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IMC_DCCL.FollowPath)
    MergeFrom(*source);
  }
}

void FollowPath::MergeFrom(const FollowPath& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IMC_DCCL.FollowPath)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  points_.MergeFrom(from.points_);
  if (from.timeout() != 0) {
    set_timeout(from.timeout());
  }
  if (from.lat() != 0) {
    set_lat(from.lat());
  }
  if (from.lon() != 0) {
    set_lon(from.lon());
  }
  if (from.z() != 0) {
    set_z(from.z());
  }
  if (from.z_units() != 0) {
    set_z_units(from.z_units());
  }
  if (from.speed() != 0) {
    set_speed(from.speed());
  }
  if (from.speed_units() != 0) {
    set_speed_units(from.speed_units());
  }
}

void FollowPath::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IMC_DCCL.FollowPath)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FollowPath::CopyFrom(const FollowPath& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IMC_DCCL.FollowPath)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FollowPath::IsInitialized() const {
  return true;
}

void FollowPath::Swap(FollowPath* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FollowPath::InternalSwap(FollowPath* other) {
  using std::swap;
  CastToBase(&points_)->InternalSwap(CastToBase(&other->points_));
  swap(timeout_, other->timeout_);
  swap(lat_, other->lat_);
  swap(lon_, other->lon_);
  swap(z_, other->z_);
  swap(z_units_, other->z_units_);
  swap(speed_, other->speed_);
  swap(speed_units_, other->speed_units_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FollowPath::GetMetadata() const {
  protobuf_IMC_5fDCCL_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IMC_5fDCCL_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Loiter::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Loiter::kTimeoutFieldNumber;
const int Loiter::kLatFieldNumber;
const int Loiter::kLonFieldNumber;
const int Loiter::kZFieldNumber;
const int Loiter::kZUnitsFieldNumber;
const int Loiter::kDurationFieldNumber;
const int Loiter::kSpeedFieldNumber;
const int Loiter::kSpeedUnitsFieldNumber;
const int Loiter::kTypeFieldNumber;
const int Loiter::kRadiusFieldNumber;
const int Loiter::kLengthFieldNumber;
const int Loiter::kBearingFieldNumber;
const int Loiter::kDirectionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Loiter::Loiter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_IMC_5fDCCL_2eproto::scc_info_Loiter.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:IMC_DCCL.Loiter)
}
Loiter::Loiter(const Loiter& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&timeout_, &from.timeout_,
    static_cast<size_t>(reinterpret_cast<char*>(&direction_) -
    reinterpret_cast<char*>(&timeout_)) + sizeof(direction_));
  // @@protoc_insertion_point(copy_constructor:IMC_DCCL.Loiter)
}

void Loiter::SharedCtor() {
  ::memset(&timeout_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&direction_) -
      reinterpret_cast<char*>(&timeout_)) + sizeof(direction_));
}

Loiter::~Loiter() {
  // @@protoc_insertion_point(destructor:IMC_DCCL.Loiter)
  SharedDtor();
}

void Loiter::SharedDtor() {
}

void Loiter::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Loiter::descriptor() {
  ::protobuf_IMC_5fDCCL_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IMC_5fDCCL_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Loiter& Loiter::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_IMC_5fDCCL_2eproto::scc_info_Loiter.base);
  return *internal_default_instance();
}


void Loiter::Clear() {
// @@protoc_insertion_point(message_clear_start:IMC_DCCL.Loiter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&timeout_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&direction_) -
      reinterpret_cast<char*>(&timeout_)) + sizeof(direction_));
  _internal_metadata_.Clear();
}

bool Loiter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:IMC_DCCL.Loiter)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 timeout = 1 [(.dccl.field) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &timeout_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float lat = 2 [(.dccl.field) = {
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &lat_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float lon = 3 [(.dccl.field) = {
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &lon_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float z = 4 [(.dccl.field) = {
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .IMC_DCCL.ZUnits z_units = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_z_units(static_cast< ::IMC_DCCL::ZUnits >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 duration = 6 [(.dccl.field) = {
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &duration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float speed = 7 [(.dccl.field) = {
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 61 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &speed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .IMC_DCCL.SpeedUnits speed_units = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_speed_units(static_cast< ::IMC_DCCL::SpeedUnits >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .IMC_DCCL.LoiterType type = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::IMC_DCCL::LoiterType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float radius = 10 [(.dccl.field) = {
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(85u /* 85 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &radius_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float length = 11 [(.dccl.field) = {
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(93u /* 93 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &length_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float bearing = 12 [(.dccl.field) = {
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(101u /* 101 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &bearing_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .IMC_DCCL.DirectionType direction = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_direction(static_cast< ::IMC_DCCL::DirectionType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:IMC_DCCL.Loiter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:IMC_DCCL.Loiter)
  return false;
#undef DO_
}

void Loiter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:IMC_DCCL.Loiter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 timeout = 1 [(.dccl.field) = {
  if (this->timeout() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->timeout(), output);
  }

  // float lat = 2 [(.dccl.field) = {
  if (this->lat() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->lat(), output);
  }

  // float lon = 3 [(.dccl.field) = {
  if (this->lon() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->lon(), output);
  }

  // float z = 4 [(.dccl.field) = {
  if (this->z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->z(), output);
  }

  // .IMC_DCCL.ZUnits z_units = 5;
  if (this->z_units() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->z_units(), output);
  }

  // int32 duration = 6 [(.dccl.field) = {
  if (this->duration() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->duration(), output);
  }

  // float speed = 7 [(.dccl.field) = {
  if (this->speed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->speed(), output);
  }

  // .IMC_DCCL.SpeedUnits speed_units = 8;
  if (this->speed_units() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->speed_units(), output);
  }

  // .IMC_DCCL.LoiterType type = 9;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->type(), output);
  }

  // float radius = 10 [(.dccl.field) = {
  if (this->radius() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(10, this->radius(), output);
  }

  // float length = 11 [(.dccl.field) = {
  if (this->length() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(11, this->length(), output);
  }

  // float bearing = 12 [(.dccl.field) = {
  if (this->bearing() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(12, this->bearing(), output);
  }

  // .IMC_DCCL.DirectionType direction = 13;
  if (this->direction() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      13, this->direction(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:IMC_DCCL.Loiter)
}

::google::protobuf::uint8* Loiter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:IMC_DCCL.Loiter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 timeout = 1 [(.dccl.field) = {
  if (this->timeout() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->timeout(), target);
  }

  // float lat = 2 [(.dccl.field) = {
  if (this->lat() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->lat(), target);
  }

  // float lon = 3 [(.dccl.field) = {
  if (this->lon() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->lon(), target);
  }

  // float z = 4 [(.dccl.field) = {
  if (this->z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->z(), target);
  }

  // .IMC_DCCL.ZUnits z_units = 5;
  if (this->z_units() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->z_units(), target);
  }

  // int32 duration = 6 [(.dccl.field) = {
  if (this->duration() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->duration(), target);
  }

  // float speed = 7 [(.dccl.field) = {
  if (this->speed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->speed(), target);
  }

  // .IMC_DCCL.SpeedUnits speed_units = 8;
  if (this->speed_units() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->speed_units(), target);
  }

  // .IMC_DCCL.LoiterType type = 9;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      9, this->type(), target);
  }

  // float radius = 10 [(.dccl.field) = {
  if (this->radius() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(10, this->radius(), target);
  }

  // float length = 11 [(.dccl.field) = {
  if (this->length() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(11, this->length(), target);
  }

  // float bearing = 12 [(.dccl.field) = {
  if (this->bearing() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(12, this->bearing(), target);
  }

  // .IMC_DCCL.DirectionType direction = 13;
  if (this->direction() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      13, this->direction(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IMC_DCCL.Loiter)
  return target;
}

size_t Loiter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IMC_DCCL.Loiter)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 timeout = 1 [(.dccl.field) = {
  if (this->timeout() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->timeout());
  }

  // float lat = 2 [(.dccl.field) = {
  if (this->lat() != 0) {
    total_size += 1 + 4;
  }

  // float lon = 3 [(.dccl.field) = {
  if (this->lon() != 0) {
    total_size += 1 + 4;
  }

  // float z = 4 [(.dccl.field) = {
  if (this->z() != 0) {
    total_size += 1 + 4;
  }

  // .IMC_DCCL.ZUnits z_units = 5;
  if (this->z_units() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->z_units());
  }

  // int32 duration = 6 [(.dccl.field) = {
  if (this->duration() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->duration());
  }

  // float speed = 7 [(.dccl.field) = {
  if (this->speed() != 0) {
    total_size += 1 + 4;
  }

  // .IMC_DCCL.SpeedUnits speed_units = 8;
  if (this->speed_units() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->speed_units());
  }

  // .IMC_DCCL.LoiterType type = 9;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // float radius = 10 [(.dccl.field) = {
  if (this->radius() != 0) {
    total_size += 1 + 4;
  }

  // float length = 11 [(.dccl.field) = {
  if (this->length() != 0) {
    total_size += 1 + 4;
  }

  // float bearing = 12 [(.dccl.field) = {
  if (this->bearing() != 0) {
    total_size += 1 + 4;
  }

  // .IMC_DCCL.DirectionType direction = 13;
  if (this->direction() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->direction());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Loiter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IMC_DCCL.Loiter)
  GOOGLE_DCHECK_NE(&from, this);
  const Loiter* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Loiter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IMC_DCCL.Loiter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IMC_DCCL.Loiter)
    MergeFrom(*source);
  }
}

void Loiter::MergeFrom(const Loiter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IMC_DCCL.Loiter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.timeout() != 0) {
    set_timeout(from.timeout());
  }
  if (from.lat() != 0) {
    set_lat(from.lat());
  }
  if (from.lon() != 0) {
    set_lon(from.lon());
  }
  if (from.z() != 0) {
    set_z(from.z());
  }
  if (from.z_units() != 0) {
    set_z_units(from.z_units());
  }
  if (from.duration() != 0) {
    set_duration(from.duration());
  }
  if (from.speed() != 0) {
    set_speed(from.speed());
  }
  if (from.speed_units() != 0) {
    set_speed_units(from.speed_units());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.radius() != 0) {
    set_radius(from.radius());
  }
  if (from.length() != 0) {
    set_length(from.length());
  }
  if (from.bearing() != 0) {
    set_bearing(from.bearing());
  }
  if (from.direction() != 0) {
    set_direction(from.direction());
  }
}

void Loiter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IMC_DCCL.Loiter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Loiter::CopyFrom(const Loiter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IMC_DCCL.Loiter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Loiter::IsInitialized() const {
  return true;
}

void Loiter::Swap(Loiter* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Loiter::InternalSwap(Loiter* other) {
  using std::swap;
  swap(timeout_, other->timeout_);
  swap(lat_, other->lat_);
  swap(lon_, other->lon_);
  swap(z_, other->z_);
  swap(z_units_, other->z_units_);
  swap(duration_, other->duration_);
  swap(speed_, other->speed_);
  swap(speed_units_, other->speed_units_);
  swap(type_, other->type_);
  swap(radius_, other->radius_);
  swap(length_, other->length_);
  swap(bearing_, other->bearing_);
  swap(direction_, other->direction_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Loiter::GetMetadata() const {
  protobuf_IMC_5fDCCL_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IMC_5fDCCL_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PathPoint::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PathPoint::kXFieldNumber;
const int PathPoint::kYFieldNumber;
const int PathPoint::kZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PathPoint::PathPoint()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_IMC_5fDCCL_2eproto::scc_info_PathPoint.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:IMC_DCCL.PathPoint)
}
PathPoint::PathPoint(const PathPoint& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&z_) -
    reinterpret_cast<char*>(&x_)) + sizeof(z_));
  // @@protoc_insertion_point(copy_constructor:IMC_DCCL.PathPoint)
}

void PathPoint::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
}

PathPoint::~PathPoint() {
  // @@protoc_insertion_point(destructor:IMC_DCCL.PathPoint)
  SharedDtor();
}

void PathPoint::SharedDtor() {
}

void PathPoint::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PathPoint::descriptor() {
  ::protobuf_IMC_5fDCCL_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IMC_5fDCCL_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PathPoint& PathPoint::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_IMC_5fDCCL_2eproto::scc_info_PathPoint.base);
  return *internal_default_instance();
}


void PathPoint::Clear() {
// @@protoc_insertion_point(message_clear_start:IMC_DCCL.PathPoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
  _internal_metadata_.Clear();
}

bool PathPoint::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:IMC_DCCL.PathPoint)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float x = 1 [(.dccl.field) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float y = 2 [(.dccl.field) = {
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float z = 3 [(.dccl.field) = {
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:IMC_DCCL.PathPoint)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:IMC_DCCL.PathPoint)
  return false;
#undef DO_
}

void PathPoint::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:IMC_DCCL.PathPoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1 [(.dccl.field) = {
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->x(), output);
  }

  // float y = 2 [(.dccl.field) = {
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->y(), output);
  }

  // float z = 3 [(.dccl.field) = {
  if (this->z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->z(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:IMC_DCCL.PathPoint)
}

::google::protobuf::uint8* PathPoint::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:IMC_DCCL.PathPoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1 [(.dccl.field) = {
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->x(), target);
  }

  // float y = 2 [(.dccl.field) = {
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->y(), target);
  }

  // float z = 3 [(.dccl.field) = {
  if (this->z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->z(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IMC_DCCL.PathPoint)
  return target;
}

size_t PathPoint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IMC_DCCL.PathPoint)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float x = 1 [(.dccl.field) = {
  if (this->x() != 0) {
    total_size += 1 + 4;
  }

  // float y = 2 [(.dccl.field) = {
  if (this->y() != 0) {
    total_size += 1 + 4;
  }

  // float z = 3 [(.dccl.field) = {
  if (this->z() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PathPoint::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IMC_DCCL.PathPoint)
  GOOGLE_DCHECK_NE(&from, this);
  const PathPoint* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PathPoint>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IMC_DCCL.PathPoint)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IMC_DCCL.PathPoint)
    MergeFrom(*source);
  }
}

void PathPoint::MergeFrom(const PathPoint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IMC_DCCL.PathPoint)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.z() != 0) {
    set_z(from.z());
  }
}

void PathPoint::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IMC_DCCL.PathPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PathPoint::CopyFrom(const PathPoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IMC_DCCL.PathPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PathPoint::IsInitialized() const {
  return true;
}

void PathPoint::Swap(PathPoint* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PathPoint::InternalSwap(PathPoint* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PathPoint::GetMetadata() const {
  protobuf_IMC_5fDCCL_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IMC_5fDCCL_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Maneuver::InitAsDefaultInstance() {
  ::IMC_DCCL::_Maneuver_default_instance_.goto_maneuver_ = const_cast< ::IMC_DCCL::Goto*>(
      ::IMC_DCCL::Goto::internal_default_instance());
  ::IMC_DCCL::_Maneuver_default_instance_.followpath_maneuver_ = const_cast< ::IMC_DCCL::FollowPath*>(
      ::IMC_DCCL::FollowPath::internal_default_instance());
  ::IMC_DCCL::_Maneuver_default_instance_.loiter_maneuver_ = const_cast< ::IMC_DCCL::Loiter*>(
      ::IMC_DCCL::Loiter::internal_default_instance());
}
void Maneuver::set_allocated_goto_maneuver(::IMC_DCCL::Goto* goto_maneuver) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_ManeuverUnion();
  if (goto_maneuver) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      goto_maneuver = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, goto_maneuver, submessage_arena);
    }
    set_has_goto_maneuver();
    ManeuverUnion_.goto_maneuver_ = goto_maneuver;
  }
  // @@protoc_insertion_point(field_set_allocated:IMC_DCCL.Maneuver.goto_maneuver)
}
void Maneuver::set_allocated_followpath_maneuver(::IMC_DCCL::FollowPath* followpath_maneuver) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_ManeuverUnion();
  if (followpath_maneuver) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      followpath_maneuver = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, followpath_maneuver, submessage_arena);
    }
    set_has_followpath_maneuver();
    ManeuverUnion_.followpath_maneuver_ = followpath_maneuver;
  }
  // @@protoc_insertion_point(field_set_allocated:IMC_DCCL.Maneuver.followpath_maneuver)
}
void Maneuver::set_allocated_loiter_maneuver(::IMC_DCCL::Loiter* loiter_maneuver) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_ManeuverUnion();
  if (loiter_maneuver) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      loiter_maneuver = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, loiter_maneuver, submessage_arena);
    }
    set_has_loiter_maneuver();
    ManeuverUnion_.loiter_maneuver_ = loiter_maneuver;
  }
  // @@protoc_insertion_point(field_set_allocated:IMC_DCCL.Maneuver.loiter_maneuver)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Maneuver::kGotoManeuverFieldNumber;
const int Maneuver::kFollowpathManeuverFieldNumber;
const int Maneuver::kLoiterManeuverFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Maneuver::Maneuver()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_IMC_5fDCCL_2eproto::scc_info_Maneuver.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:IMC_DCCL.Maneuver)
}
Maneuver::Maneuver(const Maneuver& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_ManeuverUnion();
  switch (from.ManeuverUnion_case()) {
    case kGotoManeuver: {
      mutable_goto_maneuver()->::IMC_DCCL::Goto::MergeFrom(from.goto_maneuver());
      break;
    }
    case kFollowpathManeuver: {
      mutable_followpath_maneuver()->::IMC_DCCL::FollowPath::MergeFrom(from.followpath_maneuver());
      break;
    }
    case kLoiterManeuver: {
      mutable_loiter_maneuver()->::IMC_DCCL::Loiter::MergeFrom(from.loiter_maneuver());
      break;
    }
    case MANEUVERUNION_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:IMC_DCCL.Maneuver)
}

void Maneuver::SharedCtor() {
  clear_has_ManeuverUnion();
}

Maneuver::~Maneuver() {
  // @@protoc_insertion_point(destructor:IMC_DCCL.Maneuver)
  SharedDtor();
}

void Maneuver::SharedDtor() {
  if (has_ManeuverUnion()) {
    clear_ManeuverUnion();
  }
}

void Maneuver::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Maneuver::descriptor() {
  ::protobuf_IMC_5fDCCL_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IMC_5fDCCL_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Maneuver& Maneuver::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_IMC_5fDCCL_2eproto::scc_info_Maneuver.base);
  return *internal_default_instance();
}


void Maneuver::clear_ManeuverUnion() {
// @@protoc_insertion_point(one_of_clear_start:IMC_DCCL.Maneuver)
  switch (ManeuverUnion_case()) {
    case kGotoManeuver: {
      delete ManeuverUnion_.goto_maneuver_;
      break;
    }
    case kFollowpathManeuver: {
      delete ManeuverUnion_.followpath_maneuver_;
      break;
    }
    case kLoiterManeuver: {
      delete ManeuverUnion_.loiter_maneuver_;
      break;
    }
    case MANEUVERUNION_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = MANEUVERUNION_NOT_SET;
}


void Maneuver::Clear() {
// @@protoc_insertion_point(message_clear_start:IMC_DCCL.Maneuver)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_ManeuverUnion();
  _internal_metadata_.Clear();
}

bool Maneuver::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:IMC_DCCL.Maneuver)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .IMC_DCCL.Goto goto_maneuver = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_goto_maneuver()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .IMC_DCCL.FollowPath followpath_maneuver = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_followpath_maneuver()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .IMC_DCCL.Loiter loiter_maneuver = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_loiter_maneuver()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:IMC_DCCL.Maneuver)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:IMC_DCCL.Maneuver)
  return false;
#undef DO_
}

void Maneuver::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:IMC_DCCL.Maneuver)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .IMC_DCCL.Goto goto_maneuver = 1;
  if (has_goto_maneuver()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_goto_maneuver(), output);
  }

  // .IMC_DCCL.FollowPath followpath_maneuver = 2;
  if (has_followpath_maneuver()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_followpath_maneuver(), output);
  }

  // .IMC_DCCL.Loiter loiter_maneuver = 3;
  if (has_loiter_maneuver()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_loiter_maneuver(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:IMC_DCCL.Maneuver)
}

::google::protobuf::uint8* Maneuver::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:IMC_DCCL.Maneuver)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .IMC_DCCL.Goto goto_maneuver = 1;
  if (has_goto_maneuver()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_goto_maneuver(), deterministic, target);
  }

  // .IMC_DCCL.FollowPath followpath_maneuver = 2;
  if (has_followpath_maneuver()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_followpath_maneuver(), deterministic, target);
  }

  // .IMC_DCCL.Loiter loiter_maneuver = 3;
  if (has_loiter_maneuver()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_loiter_maneuver(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IMC_DCCL.Maneuver)
  return target;
}

size_t Maneuver::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IMC_DCCL.Maneuver)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (ManeuverUnion_case()) {
    // .IMC_DCCL.Goto goto_maneuver = 1;
    case kGotoManeuver: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *ManeuverUnion_.goto_maneuver_);
      break;
    }
    // .IMC_DCCL.FollowPath followpath_maneuver = 2;
    case kFollowpathManeuver: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *ManeuverUnion_.followpath_maneuver_);
      break;
    }
    // .IMC_DCCL.Loiter loiter_maneuver = 3;
    case kLoiterManeuver: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *ManeuverUnion_.loiter_maneuver_);
      break;
    }
    case MANEUVERUNION_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Maneuver::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IMC_DCCL.Maneuver)
  GOOGLE_DCHECK_NE(&from, this);
  const Maneuver* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Maneuver>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IMC_DCCL.Maneuver)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IMC_DCCL.Maneuver)
    MergeFrom(*source);
  }
}

void Maneuver::MergeFrom(const Maneuver& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IMC_DCCL.Maneuver)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.ManeuverUnion_case()) {
    case kGotoManeuver: {
      mutable_goto_maneuver()->::IMC_DCCL::Goto::MergeFrom(from.goto_maneuver());
      break;
    }
    case kFollowpathManeuver: {
      mutable_followpath_maneuver()->::IMC_DCCL::FollowPath::MergeFrom(from.followpath_maneuver());
      break;
    }
    case kLoiterManeuver: {
      mutable_loiter_maneuver()->::IMC_DCCL::Loiter::MergeFrom(from.loiter_maneuver());
      break;
    }
    case MANEUVERUNION_NOT_SET: {
      break;
    }
  }
}

void Maneuver::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IMC_DCCL.Maneuver)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Maneuver::CopyFrom(const Maneuver& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IMC_DCCL.Maneuver)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Maneuver::IsInitialized() const {
  return true;
}

void Maneuver::Swap(Maneuver* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Maneuver::InternalSwap(Maneuver* other) {
  using std::swap;
  swap(ManeuverUnion_, other->ManeuverUnion_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Maneuver::GetMetadata() const {
  protobuf_IMC_5fDCCL_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IMC_5fDCCL_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ParameterValue::InitAsDefaultInstance() {
  ::IMC_DCCL::_ParameterValue_default_instance_.value_number_ = 0;
  ::IMC_DCCL::_ParameterValue_default_instance_.value_bool_ = 0;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ParameterValue::kValueNumberFieldNumber;
const int ParameterValue::kValueBoolFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ParameterValue::ParameterValue()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_IMC_5fDCCL_2eproto::scc_info_ParameterValue.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:IMC_DCCL.ParameterValue)
}
ParameterValue::ParameterValue(const ParameterValue& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_ParameterValueUnion();
  switch (from.ParameterValueUnion_case()) {
    case kValueNumber: {
      set_value_number(from.value_number());
      break;
    }
    case kValueBool: {
      set_value_bool(from.value_bool());
      break;
    }
    case PARAMETERVALUEUNION_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:IMC_DCCL.ParameterValue)
}

void ParameterValue::SharedCtor() {
  clear_has_ParameterValueUnion();
}

ParameterValue::~ParameterValue() {
  // @@protoc_insertion_point(destructor:IMC_DCCL.ParameterValue)
  SharedDtor();
}

void ParameterValue::SharedDtor() {
  if (has_ParameterValueUnion()) {
    clear_ParameterValueUnion();
  }
}

void ParameterValue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ParameterValue::descriptor() {
  ::protobuf_IMC_5fDCCL_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IMC_5fDCCL_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ParameterValue& ParameterValue::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_IMC_5fDCCL_2eproto::scc_info_ParameterValue.base);
  return *internal_default_instance();
}


void ParameterValue::clear_ParameterValueUnion() {
// @@protoc_insertion_point(one_of_clear_start:IMC_DCCL.ParameterValue)
  switch (ParameterValueUnion_case()) {
    case kValueNumber: {
      // No need to clear
      break;
    }
    case kValueBool: {
      // No need to clear
      break;
    }
    case PARAMETERVALUEUNION_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = PARAMETERVALUEUNION_NOT_SET;
}


void ParameterValue::Clear() {
// @@protoc_insertion_point(message_clear_start:IMC_DCCL.ParameterValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_ParameterValueUnion();
  _internal_metadata_.Clear();
}

bool ParameterValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:IMC_DCCL.ParameterValue)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float value_number = 1 [(.dccl.field) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          clear_ParameterValueUnion();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &ParameterValueUnion_.value_number_)));
          set_has_value_number();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .IMC_DCCL.FalseTrue value_bool = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_value_bool(static_cast< ::IMC_DCCL::FalseTrue >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:IMC_DCCL.ParameterValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:IMC_DCCL.ParameterValue)
  return false;
#undef DO_
}

void ParameterValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:IMC_DCCL.ParameterValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float value_number = 1 [(.dccl.field) = {
  if (has_value_number()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->value_number(), output);
  }

  // .IMC_DCCL.FalseTrue value_bool = 2;
  if (has_value_bool()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->value_bool(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:IMC_DCCL.ParameterValue)
}

::google::protobuf::uint8* ParameterValue::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:IMC_DCCL.ParameterValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float value_number = 1 [(.dccl.field) = {
  if (has_value_number()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->value_number(), target);
  }

  // .IMC_DCCL.FalseTrue value_bool = 2;
  if (has_value_bool()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->value_bool(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IMC_DCCL.ParameterValue)
  return target;
}

size_t ParameterValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IMC_DCCL.ParameterValue)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (ParameterValueUnion_case()) {
    // float value_number = 1 [(.dccl.field) = {
    case kValueNumber: {
      total_size += 1 + 4;
      break;
    }
    // .IMC_DCCL.FalseTrue value_bool = 2;
    case kValueBool: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->value_bool());
      break;
    }
    case PARAMETERVALUEUNION_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ParameterValue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IMC_DCCL.ParameterValue)
  GOOGLE_DCHECK_NE(&from, this);
  const ParameterValue* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ParameterValue>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IMC_DCCL.ParameterValue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IMC_DCCL.ParameterValue)
    MergeFrom(*source);
  }
}

void ParameterValue::MergeFrom(const ParameterValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IMC_DCCL.ParameterValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.ParameterValueUnion_case()) {
    case kValueNumber: {
      set_value_number(from.value_number());
      break;
    }
    case kValueBool: {
      set_value_bool(from.value_bool());
      break;
    }
    case PARAMETERVALUEUNION_NOT_SET: {
      break;
    }
  }
}

void ParameterValue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IMC_DCCL.ParameterValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ParameterValue::CopyFrom(const ParameterValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IMC_DCCL.ParameterValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ParameterValue::IsInitialized() const {
  return true;
}

void ParameterValue::Swap(ParameterValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ParameterValue::InternalSwap(ParameterValue* other) {
  using std::swap;
  swap(ParameterValueUnion_, other->ParameterValueUnion_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ParameterValue::GetMetadata() const {
  protobuf_IMC_5fDCCL_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IMC_5fDCCL_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EntityParameter::InitAsDefaultInstance() {
  ::IMC_DCCL::_EntityParameter_default_instance_._instance.get_mutable()->value_ = const_cast< ::IMC_DCCL::ParameterValue*>(
      ::IMC_DCCL::ParameterValue::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EntityParameter::kNameFieldNumber;
const int EntityParameter::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EntityParameter::EntityParameter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_IMC_5fDCCL_2eproto::scc_info_EntityParameter.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:IMC_DCCL.EntityParameter)
}
EntityParameter::EntityParameter(const EntityParameter& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_value()) {
    value_ = new ::IMC_DCCL::ParameterValue(*from.value_);
  } else {
    value_ = NULL;
  }
  name_ = from.name_;
  // @@protoc_insertion_point(copy_constructor:IMC_DCCL.EntityParameter)
}

void EntityParameter::SharedCtor() {
  ::memset(&value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&name_) -
      reinterpret_cast<char*>(&value_)) + sizeof(name_));
}

EntityParameter::~EntityParameter() {
  // @@protoc_insertion_point(destructor:IMC_DCCL.EntityParameter)
  SharedDtor();
}

void EntityParameter::SharedDtor() {
  if (this != internal_default_instance()) delete value_;
}

void EntityParameter::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* EntityParameter::descriptor() {
  ::protobuf_IMC_5fDCCL_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IMC_5fDCCL_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EntityParameter& EntityParameter::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_IMC_5fDCCL_2eproto::scc_info_EntityParameter.base);
  return *internal_default_instance();
}


void EntityParameter::Clear() {
// @@protoc_insertion_point(message_clear_start:IMC_DCCL.EntityParameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && value_ != NULL) {
    delete value_;
  }
  value_ = NULL;
  name_ = 0;
  _internal_metadata_.Clear();
}

bool EntityParameter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:IMC_DCCL.EntityParameter)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .IMC_DCCL.ParameterName name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_name(static_cast< ::IMC_DCCL::ParameterName >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .IMC_DCCL.ParameterValue value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:IMC_DCCL.EntityParameter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:IMC_DCCL.EntityParameter)
  return false;
#undef DO_
}

void EntityParameter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:IMC_DCCL.EntityParameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .IMC_DCCL.ParameterName name = 1;
  if (this->name() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->name(), output);
  }

  // .IMC_DCCL.ParameterValue value = 2;
  if (this->has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:IMC_DCCL.EntityParameter)
}

::google::protobuf::uint8* EntityParameter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:IMC_DCCL.EntityParameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .IMC_DCCL.ParameterName name = 1;
  if (this->name() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->name(), target);
  }

  // .IMC_DCCL.ParameterValue value = 2;
  if (this->has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_value(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IMC_DCCL.EntityParameter)
  return target;
}

size_t EntityParameter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IMC_DCCL.EntityParameter)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .IMC_DCCL.ParameterValue value = 2;
  if (this->has_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_);
  }

  // .IMC_DCCL.ParameterName name = 1;
  if (this->name() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EntityParameter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IMC_DCCL.EntityParameter)
  GOOGLE_DCHECK_NE(&from, this);
  const EntityParameter* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EntityParameter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IMC_DCCL.EntityParameter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IMC_DCCL.EntityParameter)
    MergeFrom(*source);
  }
}

void EntityParameter::MergeFrom(const EntityParameter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IMC_DCCL.EntityParameter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_value()) {
    mutable_value()->::IMC_DCCL::ParameterValue::MergeFrom(from.value());
  }
  if (from.name() != 0) {
    set_name(from.name());
  }
}

void EntityParameter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IMC_DCCL.EntityParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EntityParameter::CopyFrom(const EntityParameter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IMC_DCCL.EntityParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EntityParameter::IsInitialized() const {
  return true;
}

void EntityParameter::Swap(EntityParameter* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EntityParameter::InternalSwap(EntityParameter* other) {
  using std::swap;
  swap(value_, other->value_);
  swap(name_, other->name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EntityParameter::GetMetadata() const {
  protobuf_IMC_5fDCCL_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IMC_5fDCCL_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EntityParameters::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EntityParameters::kNameFieldNumber;
const int EntityParameters::kParamsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EntityParameters::EntityParameters()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_IMC_5fDCCL_2eproto::scc_info_EntityParameters.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:IMC_DCCL.EntityParameters)
}
EntityParameters::EntityParameters(const EntityParameters& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      params_(from.params_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_ = from.name_;
  // @@protoc_insertion_point(copy_constructor:IMC_DCCL.EntityParameters)
}

void EntityParameters::SharedCtor() {
  name_ = 0;
}

EntityParameters::~EntityParameters() {
  // @@protoc_insertion_point(destructor:IMC_DCCL.EntityParameters)
  SharedDtor();
}

void EntityParameters::SharedDtor() {
}

void EntityParameters::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* EntityParameters::descriptor() {
  ::protobuf_IMC_5fDCCL_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IMC_5fDCCL_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EntityParameters& EntityParameters::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_IMC_5fDCCL_2eproto::scc_info_EntityParameters.base);
  return *internal_default_instance();
}


void EntityParameters::Clear() {
// @@protoc_insertion_point(message_clear_start:IMC_DCCL.EntityParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  params_.Clear();
  name_ = 0;
  _internal_metadata_.Clear();
}

bool EntityParameters::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:IMC_DCCL.EntityParameters)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .IMC_DCCL.EntityName name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_name(static_cast< ::IMC_DCCL::EntityName >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .IMC_DCCL.EntityParameter params = 2 [(.dccl.field) = {
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_params()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:IMC_DCCL.EntityParameters)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:IMC_DCCL.EntityParameters)
  return false;
#undef DO_
}

void EntityParameters::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:IMC_DCCL.EntityParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .IMC_DCCL.EntityName name = 1;
  if (this->name() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->name(), output);
  }

  // repeated .IMC_DCCL.EntityParameter params = 2 [(.dccl.field) = {
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->params_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->params(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:IMC_DCCL.EntityParameters)
}

::google::protobuf::uint8* EntityParameters::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:IMC_DCCL.EntityParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .IMC_DCCL.EntityName name = 1;
  if (this->name() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->name(), target);
  }

  // repeated .IMC_DCCL.EntityParameter params = 2 [(.dccl.field) = {
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->params_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->params(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IMC_DCCL.EntityParameters)
  return target;
}

size_t EntityParameters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IMC_DCCL.EntityParameters)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .IMC_DCCL.EntityParameter params = 2 [(.dccl.field) = {
  {
    unsigned int count = static_cast<unsigned int>(this->params_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->params(static_cast<int>(i)));
    }
  }

  // .IMC_DCCL.EntityName name = 1;
  if (this->name() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EntityParameters::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IMC_DCCL.EntityParameters)
  GOOGLE_DCHECK_NE(&from, this);
  const EntityParameters* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EntityParameters>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IMC_DCCL.EntityParameters)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IMC_DCCL.EntityParameters)
    MergeFrom(*source);
  }
}

void EntityParameters::MergeFrom(const EntityParameters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IMC_DCCL.EntityParameters)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  params_.MergeFrom(from.params_);
  if (from.name() != 0) {
    set_name(from.name());
  }
}

void EntityParameters::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IMC_DCCL.EntityParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EntityParameters::CopyFrom(const EntityParameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IMC_DCCL.EntityParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EntityParameters::IsInitialized() const {
  return true;
}

void EntityParameters::Swap(EntityParameters* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EntityParameters::InternalSwap(EntityParameters* other) {
  using std::swap;
  CastToBase(&params_)->InternalSwap(CastToBase(&other->params_));
  swap(name_, other->name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EntityParameters::GetMetadata() const {
  protobuf_IMC_5fDCCL_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IMC_5fDCCL_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ManeuverID::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ManeuverID::kManeuverTypeFieldNumber;
const int ManeuverID::kManeuverNumberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ManeuverID::ManeuverID()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_IMC_5fDCCL_2eproto::scc_info_ManeuverID.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:IMC_DCCL.ManeuverID)
}
ManeuverID::ManeuverID(const ManeuverID& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&maneuver_type_, &from.maneuver_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&maneuver_number_) -
    reinterpret_cast<char*>(&maneuver_type_)) + sizeof(maneuver_number_));
  // @@protoc_insertion_point(copy_constructor:IMC_DCCL.ManeuverID)
}

void ManeuverID::SharedCtor() {
  ::memset(&maneuver_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&maneuver_number_) -
      reinterpret_cast<char*>(&maneuver_type_)) + sizeof(maneuver_number_));
}

ManeuverID::~ManeuverID() {
  // @@protoc_insertion_point(destructor:IMC_DCCL.ManeuverID)
  SharedDtor();
}

void ManeuverID::SharedDtor() {
}

void ManeuverID::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ManeuverID::descriptor() {
  ::protobuf_IMC_5fDCCL_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IMC_5fDCCL_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ManeuverID& ManeuverID::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_IMC_5fDCCL_2eproto::scc_info_ManeuverID.base);
  return *internal_default_instance();
}


void ManeuverID::Clear() {
// @@protoc_insertion_point(message_clear_start:IMC_DCCL.ManeuverID)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&maneuver_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&maneuver_number_) -
      reinterpret_cast<char*>(&maneuver_type_)) + sizeof(maneuver_number_));
  _internal_metadata_.Clear();
}

bool ManeuverID::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:IMC_DCCL.ManeuverID)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .IMC_DCCL.ManeuverType maneuver_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_maneuver_type(static_cast< ::IMC_DCCL::ManeuverType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 maneuver_number = 2 [(.dccl.field) = {
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &maneuver_number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:IMC_DCCL.ManeuverID)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:IMC_DCCL.ManeuverID)
  return false;
#undef DO_
}

void ManeuverID::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:IMC_DCCL.ManeuverID)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .IMC_DCCL.ManeuverType maneuver_type = 1;
  if (this->maneuver_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->maneuver_type(), output);
  }

  // int32 maneuver_number = 2 [(.dccl.field) = {
  if (this->maneuver_number() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->maneuver_number(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:IMC_DCCL.ManeuverID)
}

::google::protobuf::uint8* ManeuverID::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:IMC_DCCL.ManeuverID)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .IMC_DCCL.ManeuverType maneuver_type = 1;
  if (this->maneuver_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->maneuver_type(), target);
  }

  // int32 maneuver_number = 2 [(.dccl.field) = {
  if (this->maneuver_number() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->maneuver_number(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IMC_DCCL.ManeuverID)
  return target;
}

size_t ManeuverID::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IMC_DCCL.ManeuverID)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .IMC_DCCL.ManeuverType maneuver_type = 1;
  if (this->maneuver_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->maneuver_type());
  }

  // int32 maneuver_number = 2 [(.dccl.field) = {
  if (this->maneuver_number() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->maneuver_number());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ManeuverID::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IMC_DCCL.ManeuverID)
  GOOGLE_DCHECK_NE(&from, this);
  const ManeuverID* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ManeuverID>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IMC_DCCL.ManeuverID)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IMC_DCCL.ManeuverID)
    MergeFrom(*source);
  }
}

void ManeuverID::MergeFrom(const ManeuverID& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IMC_DCCL.ManeuverID)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.maneuver_type() != 0) {
    set_maneuver_type(from.maneuver_type());
  }
  if (from.maneuver_number() != 0) {
    set_maneuver_number(from.maneuver_number());
  }
}

void ManeuverID::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IMC_DCCL.ManeuverID)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ManeuverID::CopyFrom(const ManeuverID& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IMC_DCCL.ManeuverID)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ManeuverID::IsInitialized() const {
  return true;
}

void ManeuverID::Swap(ManeuverID* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ManeuverID::InternalSwap(ManeuverID* other) {
  using std::swap;
  swap(maneuver_type_, other->maneuver_type_);
  swap(maneuver_number_, other->maneuver_number_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ManeuverID::GetMetadata() const {
  protobuf_IMC_5fDCCL_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IMC_5fDCCL_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PlanManeuver::InitAsDefaultInstance() {
  ::IMC_DCCL::_PlanManeuver_default_instance_._instance.get_mutable()->maneuver_id_ = const_cast< ::IMC_DCCL::ManeuverID*>(
      ::IMC_DCCL::ManeuverID::internal_default_instance());
  ::IMC_DCCL::_PlanManeuver_default_instance_._instance.get_mutable()->data_ = const_cast< ::IMC_DCCL::Maneuver*>(
      ::IMC_DCCL::Maneuver::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlanManeuver::kManeuverIdFieldNumber;
const int PlanManeuver::kDataFieldNumber;
const int PlanManeuver::kStartActionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlanManeuver::PlanManeuver()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_IMC_5fDCCL_2eproto::scc_info_PlanManeuver.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:IMC_DCCL.PlanManeuver)
}
PlanManeuver::PlanManeuver(const PlanManeuver& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      start_actions_(from.start_actions_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_maneuver_id()) {
    maneuver_id_ = new ::IMC_DCCL::ManeuverID(*from.maneuver_id_);
  } else {
    maneuver_id_ = NULL;
  }
  if (from.has_data()) {
    data_ = new ::IMC_DCCL::Maneuver(*from.data_);
  } else {
    data_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:IMC_DCCL.PlanManeuver)
}

void PlanManeuver::SharedCtor() {
  ::memset(&maneuver_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&data_) -
      reinterpret_cast<char*>(&maneuver_id_)) + sizeof(data_));
}

PlanManeuver::~PlanManeuver() {
  // @@protoc_insertion_point(destructor:IMC_DCCL.PlanManeuver)
  SharedDtor();
}

void PlanManeuver::SharedDtor() {
  if (this != internal_default_instance()) delete maneuver_id_;
  if (this != internal_default_instance()) delete data_;
}

void PlanManeuver::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PlanManeuver::descriptor() {
  ::protobuf_IMC_5fDCCL_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IMC_5fDCCL_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlanManeuver& PlanManeuver::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_IMC_5fDCCL_2eproto::scc_info_PlanManeuver.base);
  return *internal_default_instance();
}


void PlanManeuver::Clear() {
// @@protoc_insertion_point(message_clear_start:IMC_DCCL.PlanManeuver)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  start_actions_.Clear();
  if (GetArenaNoVirtual() == NULL && maneuver_id_ != NULL) {
    delete maneuver_id_;
  }
  maneuver_id_ = NULL;
  if (GetArenaNoVirtual() == NULL && data_ != NULL) {
    delete data_;
  }
  data_ = NULL;
  _internal_metadata_.Clear();
}

bool PlanManeuver::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:IMC_DCCL.PlanManeuver)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .IMC_DCCL.ManeuverID maneuver_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_maneuver_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .IMC_DCCL.Maneuver data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .IMC_DCCL.EntityParameters start_actions = 3 [(.dccl.field) = {
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_start_actions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:IMC_DCCL.PlanManeuver)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:IMC_DCCL.PlanManeuver)
  return false;
#undef DO_
}

void PlanManeuver::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:IMC_DCCL.PlanManeuver)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .IMC_DCCL.ManeuverID maneuver_id = 1;
  if (this->has_maneuver_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_maneuver_id(), output);
  }

  // .IMC_DCCL.Maneuver data = 2;
  if (this->has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_data(), output);
  }

  // repeated .IMC_DCCL.EntityParameters start_actions = 3 [(.dccl.field) = {
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->start_actions_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->start_actions(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:IMC_DCCL.PlanManeuver)
}

::google::protobuf::uint8* PlanManeuver::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:IMC_DCCL.PlanManeuver)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .IMC_DCCL.ManeuverID maneuver_id = 1;
  if (this->has_maneuver_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_maneuver_id(), deterministic, target);
  }

  // .IMC_DCCL.Maneuver data = 2;
  if (this->has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_data(), deterministic, target);
  }

  // repeated .IMC_DCCL.EntityParameters start_actions = 3 [(.dccl.field) = {
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->start_actions_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->start_actions(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IMC_DCCL.PlanManeuver)
  return target;
}

size_t PlanManeuver::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IMC_DCCL.PlanManeuver)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .IMC_DCCL.EntityParameters start_actions = 3 [(.dccl.field) = {
  {
    unsigned int count = static_cast<unsigned int>(this->start_actions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->start_actions(static_cast<int>(i)));
    }
  }

  // .IMC_DCCL.ManeuverID maneuver_id = 1;
  if (this->has_maneuver_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *maneuver_id_);
  }

  // .IMC_DCCL.Maneuver data = 2;
  if (this->has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *data_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PlanManeuver::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IMC_DCCL.PlanManeuver)
  GOOGLE_DCHECK_NE(&from, this);
  const PlanManeuver* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlanManeuver>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IMC_DCCL.PlanManeuver)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IMC_DCCL.PlanManeuver)
    MergeFrom(*source);
  }
}

void PlanManeuver::MergeFrom(const PlanManeuver& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IMC_DCCL.PlanManeuver)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  start_actions_.MergeFrom(from.start_actions_);
  if (from.has_maneuver_id()) {
    mutable_maneuver_id()->::IMC_DCCL::ManeuverID::MergeFrom(from.maneuver_id());
  }
  if (from.has_data()) {
    mutable_data()->::IMC_DCCL::Maneuver::MergeFrom(from.data());
  }
}

void PlanManeuver::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IMC_DCCL.PlanManeuver)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlanManeuver::CopyFrom(const PlanManeuver& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IMC_DCCL.PlanManeuver)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlanManeuver::IsInitialized() const {
  return true;
}

void PlanManeuver::Swap(PlanManeuver* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlanManeuver::InternalSwap(PlanManeuver* other) {
  using std::swap;
  CastToBase(&start_actions_)->InternalSwap(CastToBase(&other->start_actions_));
  swap(maneuver_id_, other->maneuver_id_);
  swap(data_, other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PlanManeuver::GetMetadata() const {
  protobuf_IMC_5fDCCL_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IMC_5fDCCL_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PlanVariable::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlanVariable::kNameFieldNumber;
const int PlanVariable::kValueFieldNumber;
const int PlanVariable::kTypeFieldNumber;
const int PlanVariable::kAccessFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlanVariable::PlanVariable()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_IMC_5fDCCL_2eproto::scc_info_PlanVariable.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:IMC_DCCL.PlanVariable)
}
PlanVariable::PlanVariable(const PlanVariable& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&access_) -
    reinterpret_cast<char*>(&type_)) + sizeof(access_));
  // @@protoc_insertion_point(copy_constructor:IMC_DCCL.PlanVariable)
}

void PlanVariable::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&access_) -
      reinterpret_cast<char*>(&type_)) + sizeof(access_));
}

PlanVariable::~PlanVariable() {
  // @@protoc_insertion_point(destructor:IMC_DCCL.PlanVariable)
  SharedDtor();
}

void PlanVariable::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PlanVariable::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PlanVariable::descriptor() {
  ::protobuf_IMC_5fDCCL_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IMC_5fDCCL_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlanVariable& PlanVariable::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_IMC_5fDCCL_2eproto::scc_info_PlanVariable.base);
  return *internal_default_instance();
}


void PlanVariable::Clear() {
// @@protoc_insertion_point(message_clear_start:IMC_DCCL.PlanVariable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&access_) -
      reinterpret_cast<char*>(&type_)) + sizeof(access_));
  _internal_metadata_.Clear();
}

bool PlanVariable::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:IMC_DCCL.PlanVariable)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1 [(.dccl.field) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "IMC_DCCL.PlanVariable.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string value = 2 [(.dccl.field) = {
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "IMC_DCCL.PlanVariable.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .IMC_DCCL.Type type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::IMC_DCCL::Type >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .IMC_DCCL.AccessType access = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_access(static_cast< ::IMC_DCCL::AccessType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:IMC_DCCL.PlanVariable)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:IMC_DCCL.PlanVariable)
  return false;
#undef DO_
}

void PlanVariable::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:IMC_DCCL.PlanVariable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.dccl.field) = {
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "IMC_DCCL.PlanVariable.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string value = 2 [(.dccl.field) = {
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "IMC_DCCL.PlanVariable.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  // .IMC_DCCL.Type type = 3;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->type(), output);
  }

  // .IMC_DCCL.AccessType access = 4;
  if (this->access() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->access(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:IMC_DCCL.PlanVariable)
}

::google::protobuf::uint8* PlanVariable::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:IMC_DCCL.PlanVariable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.dccl.field) = {
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "IMC_DCCL.PlanVariable.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string value = 2 [(.dccl.field) = {
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "IMC_DCCL.PlanVariable.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  // .IMC_DCCL.Type type = 3;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->type(), target);
  }

  // .IMC_DCCL.AccessType access = 4;
  if (this->access() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->access(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IMC_DCCL.PlanVariable)
  return target;
}

size_t PlanVariable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IMC_DCCL.PlanVariable)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1 [(.dccl.field) = {
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string value = 2 [(.dccl.field) = {
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  // .IMC_DCCL.Type type = 3;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // .IMC_DCCL.AccessType access = 4;
  if (this->access() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->access());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PlanVariable::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IMC_DCCL.PlanVariable)
  GOOGLE_DCHECK_NE(&from, this);
  const PlanVariable* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlanVariable>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IMC_DCCL.PlanVariable)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IMC_DCCL.PlanVariable)
    MergeFrom(*source);
  }
}

void PlanVariable::MergeFrom(const PlanVariable& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IMC_DCCL.PlanVariable)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.access() != 0) {
    set_access(from.access());
  }
}

void PlanVariable::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IMC_DCCL.PlanVariable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlanVariable::CopyFrom(const PlanVariable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IMC_DCCL.PlanVariable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlanVariable::IsInitialized() const {
  return true;
}

void PlanVariable::Swap(PlanVariable* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlanVariable::InternalSwap(PlanVariable* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(type_, other->type_);
  swap(access_, other->access_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PlanVariable::GetMetadata() const {
  protobuf_IMC_5fDCCL_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IMC_5fDCCL_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PlanTransition::InitAsDefaultInstance() {
  ::IMC_DCCL::_PlanTransition_default_instance_._instance.get_mutable()->source_man_ = const_cast< ::IMC_DCCL::ManeuverID*>(
      ::IMC_DCCL::ManeuverID::internal_default_instance());
  ::IMC_DCCL::_PlanTransition_default_instance_._instance.get_mutable()->dest_man_ = const_cast< ::IMC_DCCL::ManeuverID*>(
      ::IMC_DCCL::ManeuverID::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlanTransition::kSourceManFieldNumber;
const int PlanTransition::kDestManFieldNumber;
const int PlanTransition::kConditionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlanTransition::PlanTransition()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_IMC_5fDCCL_2eproto::scc_info_PlanTransition.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:IMC_DCCL.PlanTransition)
}
PlanTransition::PlanTransition(const PlanTransition& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_source_man()) {
    source_man_ = new ::IMC_DCCL::ManeuverID(*from.source_man_);
  } else {
    source_man_ = NULL;
  }
  if (from.has_dest_man()) {
    dest_man_ = new ::IMC_DCCL::ManeuverID(*from.dest_man_);
  } else {
    dest_man_ = NULL;
  }
  conditions_ = from.conditions_;
  // @@protoc_insertion_point(copy_constructor:IMC_DCCL.PlanTransition)
}

void PlanTransition::SharedCtor() {
  ::memset(&source_man_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&conditions_) -
      reinterpret_cast<char*>(&source_man_)) + sizeof(conditions_));
}

PlanTransition::~PlanTransition() {
  // @@protoc_insertion_point(destructor:IMC_DCCL.PlanTransition)
  SharedDtor();
}

void PlanTransition::SharedDtor() {
  if (this != internal_default_instance()) delete source_man_;
  if (this != internal_default_instance()) delete dest_man_;
}

void PlanTransition::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PlanTransition::descriptor() {
  ::protobuf_IMC_5fDCCL_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IMC_5fDCCL_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlanTransition& PlanTransition::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_IMC_5fDCCL_2eproto::scc_info_PlanTransition.base);
  return *internal_default_instance();
}


void PlanTransition::Clear() {
// @@protoc_insertion_point(message_clear_start:IMC_DCCL.PlanTransition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && source_man_ != NULL) {
    delete source_man_;
  }
  source_man_ = NULL;
  if (GetArenaNoVirtual() == NULL && dest_man_ != NULL) {
    delete dest_man_;
  }
  dest_man_ = NULL;
  conditions_ = 0;
  _internal_metadata_.Clear();
}

bool PlanTransition::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:IMC_DCCL.PlanTransition)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .IMC_DCCL.ManeuverID source_man = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_source_man()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .IMC_DCCL.ManeuverID dest_man = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_dest_man()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .IMC_DCCL.TransitionCondition conditions = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_conditions(static_cast< ::IMC_DCCL::TransitionCondition >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:IMC_DCCL.PlanTransition)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:IMC_DCCL.PlanTransition)
  return false;
#undef DO_
}

void PlanTransition::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:IMC_DCCL.PlanTransition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .IMC_DCCL.ManeuverID source_man = 1;
  if (this->has_source_man()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_source_man(), output);
  }

  // .IMC_DCCL.ManeuverID dest_man = 2;
  if (this->has_dest_man()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_dest_man(), output);
  }

  // .IMC_DCCL.TransitionCondition conditions = 3;
  if (this->conditions() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->conditions(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:IMC_DCCL.PlanTransition)
}

::google::protobuf::uint8* PlanTransition::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:IMC_DCCL.PlanTransition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .IMC_DCCL.ManeuverID source_man = 1;
  if (this->has_source_man()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_source_man(), deterministic, target);
  }

  // .IMC_DCCL.ManeuverID dest_man = 2;
  if (this->has_dest_man()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_dest_man(), deterministic, target);
  }

  // .IMC_DCCL.TransitionCondition conditions = 3;
  if (this->conditions() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->conditions(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IMC_DCCL.PlanTransition)
  return target;
}

size_t PlanTransition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IMC_DCCL.PlanTransition)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .IMC_DCCL.ManeuverID source_man = 1;
  if (this->has_source_man()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *source_man_);
  }

  // .IMC_DCCL.ManeuverID dest_man = 2;
  if (this->has_dest_man()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *dest_man_);
  }

  // .IMC_DCCL.TransitionCondition conditions = 3;
  if (this->conditions() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->conditions());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PlanTransition::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IMC_DCCL.PlanTransition)
  GOOGLE_DCHECK_NE(&from, this);
  const PlanTransition* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlanTransition>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IMC_DCCL.PlanTransition)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IMC_DCCL.PlanTransition)
    MergeFrom(*source);
  }
}

void PlanTransition::MergeFrom(const PlanTransition& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IMC_DCCL.PlanTransition)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_source_man()) {
    mutable_source_man()->::IMC_DCCL::ManeuverID::MergeFrom(from.source_man());
  }
  if (from.has_dest_man()) {
    mutable_dest_man()->::IMC_DCCL::ManeuverID::MergeFrom(from.dest_man());
  }
  if (from.conditions() != 0) {
    set_conditions(from.conditions());
  }
}

void PlanTransition::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IMC_DCCL.PlanTransition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlanTransition::CopyFrom(const PlanTransition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IMC_DCCL.PlanTransition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlanTransition::IsInitialized() const {
  return true;
}

void PlanTransition::Swap(PlanTransition* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlanTransition::InternalSwap(PlanTransition* other) {
  using std::swap;
  swap(source_man_, other->source_man_);
  swap(dest_man_, other->dest_man_);
  swap(conditions_, other->conditions_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PlanTransition::GetMetadata() const {
  protobuf_IMC_5fDCCL_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IMC_5fDCCL_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PlanSpecification::InitAsDefaultInstance() {
  ::IMC_DCCL::_PlanSpecification_default_instance_._instance.get_mutable()->start_man_id_ = const_cast< ::IMC_DCCL::ManeuverID*>(
      ::IMC_DCCL::ManeuverID::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlanSpecification::kPlanIdFieldNumber;
const int PlanSpecification::kDescriptionFieldNumber;
const int PlanSpecification::kVnamespaceFieldNumber;
const int PlanSpecification::kStartManIdFieldNumber;
const int PlanSpecification::kManeuversFieldNumber;
const int PlanSpecification::kTransitionsFieldNumber;
const int PlanSpecification::kStartActionsFieldNumber;
const int PlanSpecification::kVariablesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlanSpecification::PlanSpecification()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_IMC_5fDCCL_2eproto::scc_info_PlanSpecification.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:IMC_DCCL.PlanSpecification)
}
PlanSpecification::PlanSpecification(const PlanSpecification& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      maneuvers_(from.maneuvers_),
      transitions_(from.transitions_),
      start_actions_(from.start_actions_),
      variables_(from.variables_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  plan_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.plan_id().size() > 0) {
    plan_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.plan_id_);
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  vnamespace_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.vnamespace().size() > 0) {
    vnamespace_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vnamespace_);
  }
  if (from.has_start_man_id()) {
    start_man_id_ = new ::IMC_DCCL::ManeuverID(*from.start_man_id_);
  } else {
    start_man_id_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:IMC_DCCL.PlanSpecification)
}

void PlanSpecification::SharedCtor() {
  plan_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vnamespace_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  start_man_id_ = NULL;
}

PlanSpecification::~PlanSpecification() {
  // @@protoc_insertion_point(destructor:IMC_DCCL.PlanSpecification)
  SharedDtor();
}

void PlanSpecification::SharedDtor() {
  plan_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vnamespace_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete start_man_id_;
}

void PlanSpecification::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PlanSpecification::descriptor() {
  ::protobuf_IMC_5fDCCL_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IMC_5fDCCL_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlanSpecification& PlanSpecification::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_IMC_5fDCCL_2eproto::scc_info_PlanSpecification.base);
  return *internal_default_instance();
}


void PlanSpecification::Clear() {
// @@protoc_insertion_point(message_clear_start:IMC_DCCL.PlanSpecification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  maneuvers_.Clear();
  transitions_.Clear();
  start_actions_.Clear();
  variables_.Clear();
  plan_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vnamespace_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && start_man_id_ != NULL) {
    delete start_man_id_;
  }
  start_man_id_ = NULL;
  _internal_metadata_.Clear();
}

bool PlanSpecification::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:IMC_DCCL.PlanSpecification)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string plan_id = 1 [(.dccl.field) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_plan_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->plan_id().data(), static_cast<int>(this->plan_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "IMC_DCCL.PlanSpecification.plan_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string description = 2 [(.dccl.field) = {
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "IMC_DCCL.PlanSpecification.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string vnamespace = 3 [(.dccl.field) = {
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vnamespace()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->vnamespace().data(), static_cast<int>(this->vnamespace().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "IMC_DCCL.PlanSpecification.vnamespace"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .IMC_DCCL.ManeuverID start_man_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_start_man_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .IMC_DCCL.PlanManeuver maneuvers = 5 [(.dccl.field) = {
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_maneuvers()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .IMC_DCCL.PlanTransition transitions = 6 [(.dccl.field) = {
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_transitions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .IMC_DCCL.EntityParameters start_actions = 7 [(.dccl.field) = {
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_start_actions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .IMC_DCCL.PlanVariable variables = 8 [(.dccl.field) = {
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_variables()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:IMC_DCCL.PlanSpecification)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:IMC_DCCL.PlanSpecification)
  return false;
#undef DO_
}

void PlanSpecification::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:IMC_DCCL.PlanSpecification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string plan_id = 1 [(.dccl.field) = {
  if (this->plan_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->plan_id().data(), static_cast<int>(this->plan_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "IMC_DCCL.PlanSpecification.plan_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->plan_id(), output);
  }

  // string description = 2 [(.dccl.field) = {
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "IMC_DCCL.PlanSpecification.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->description(), output);
  }

  // string vnamespace = 3 [(.dccl.field) = {
  if (this->vnamespace().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vnamespace().data(), static_cast<int>(this->vnamespace().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "IMC_DCCL.PlanSpecification.vnamespace");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->vnamespace(), output);
  }

  // .IMC_DCCL.ManeuverID start_man_id = 4;
  if (this->has_start_man_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_start_man_id(), output);
  }

  // repeated .IMC_DCCL.PlanManeuver maneuvers = 5 [(.dccl.field) = {
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->maneuvers_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->maneuvers(static_cast<int>(i)),
      output);
  }

  // repeated .IMC_DCCL.PlanTransition transitions = 6 [(.dccl.field) = {
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->transitions_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->transitions(static_cast<int>(i)),
      output);
  }

  // repeated .IMC_DCCL.EntityParameters start_actions = 7 [(.dccl.field) = {
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->start_actions_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7,
      this->start_actions(static_cast<int>(i)),
      output);
  }

  // repeated .IMC_DCCL.PlanVariable variables = 8 [(.dccl.field) = {
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->variables_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8,
      this->variables(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:IMC_DCCL.PlanSpecification)
}

::google::protobuf::uint8* PlanSpecification::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:IMC_DCCL.PlanSpecification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string plan_id = 1 [(.dccl.field) = {
  if (this->plan_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->plan_id().data(), static_cast<int>(this->plan_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "IMC_DCCL.PlanSpecification.plan_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->plan_id(), target);
  }

  // string description = 2 [(.dccl.field) = {
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "IMC_DCCL.PlanSpecification.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->description(), target);
  }

  // string vnamespace = 3 [(.dccl.field) = {
  if (this->vnamespace().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vnamespace().data(), static_cast<int>(this->vnamespace().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "IMC_DCCL.PlanSpecification.vnamespace");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->vnamespace(), target);
  }

  // .IMC_DCCL.ManeuverID start_man_id = 4;
  if (this->has_start_man_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_start_man_id(), deterministic, target);
  }

  // repeated .IMC_DCCL.PlanManeuver maneuvers = 5 [(.dccl.field) = {
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->maneuvers_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->maneuvers(static_cast<int>(i)), deterministic, target);
  }

  // repeated .IMC_DCCL.PlanTransition transitions = 6 [(.dccl.field) = {
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->transitions_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->transitions(static_cast<int>(i)), deterministic, target);
  }

  // repeated .IMC_DCCL.EntityParameters start_actions = 7 [(.dccl.field) = {
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->start_actions_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->start_actions(static_cast<int>(i)), deterministic, target);
  }

  // repeated .IMC_DCCL.PlanVariable variables = 8 [(.dccl.field) = {
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->variables_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->variables(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IMC_DCCL.PlanSpecification)
  return target;
}

size_t PlanSpecification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IMC_DCCL.PlanSpecification)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .IMC_DCCL.PlanManeuver maneuvers = 5 [(.dccl.field) = {
  {
    unsigned int count = static_cast<unsigned int>(this->maneuvers_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->maneuvers(static_cast<int>(i)));
    }
  }

  // repeated .IMC_DCCL.PlanTransition transitions = 6 [(.dccl.field) = {
  {
    unsigned int count = static_cast<unsigned int>(this->transitions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->transitions(static_cast<int>(i)));
    }
  }

  // repeated .IMC_DCCL.EntityParameters start_actions = 7 [(.dccl.field) = {
  {
    unsigned int count = static_cast<unsigned int>(this->start_actions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->start_actions(static_cast<int>(i)));
    }
  }

  // repeated .IMC_DCCL.PlanVariable variables = 8 [(.dccl.field) = {
  {
    unsigned int count = static_cast<unsigned int>(this->variables_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->variables(static_cast<int>(i)));
    }
  }

  // string plan_id = 1 [(.dccl.field) = {
  if (this->plan_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->plan_id());
  }

  // string description = 2 [(.dccl.field) = {
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // string vnamespace = 3 [(.dccl.field) = {
  if (this->vnamespace().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->vnamespace());
  }

  // .IMC_DCCL.ManeuverID start_man_id = 4;
  if (this->has_start_man_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *start_man_id_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PlanSpecification::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IMC_DCCL.PlanSpecification)
  GOOGLE_DCHECK_NE(&from, this);
  const PlanSpecification* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlanSpecification>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IMC_DCCL.PlanSpecification)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IMC_DCCL.PlanSpecification)
    MergeFrom(*source);
  }
}

void PlanSpecification::MergeFrom(const PlanSpecification& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IMC_DCCL.PlanSpecification)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  maneuvers_.MergeFrom(from.maneuvers_);
  transitions_.MergeFrom(from.transitions_);
  start_actions_.MergeFrom(from.start_actions_);
  variables_.MergeFrom(from.variables_);
  if (from.plan_id().size() > 0) {

    plan_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.plan_id_);
  }
  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.vnamespace().size() > 0) {

    vnamespace_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vnamespace_);
  }
  if (from.has_start_man_id()) {
    mutable_start_man_id()->::IMC_DCCL::ManeuverID::MergeFrom(from.start_man_id());
  }
}

void PlanSpecification::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IMC_DCCL.PlanSpecification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlanSpecification::CopyFrom(const PlanSpecification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IMC_DCCL.PlanSpecification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlanSpecification::IsInitialized() const {
  return true;
}

void PlanSpecification::Swap(PlanSpecification* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlanSpecification::InternalSwap(PlanSpecification* other) {
  using std::swap;
  CastToBase(&maneuvers_)->InternalSwap(CastToBase(&other->maneuvers_));
  CastToBase(&transitions_)->InternalSwap(CastToBase(&other->transitions_));
  CastToBase(&start_actions_)->InternalSwap(CastToBase(&other->start_actions_));
  CastToBase(&variables_)->InternalSwap(CastToBase(&other->variables_));
  plan_id_.Swap(&other->plan_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  description_.Swap(&other->description_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  vnamespace_.Swap(&other->vnamespace_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(start_man_id_, other->start_man_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PlanSpecification::GetMetadata() const {
  protobuf_IMC_5fDCCL_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IMC_5fDCCL_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace IMC_DCCL
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::IMC_DCCL::EstimatedState* Arena::CreateMaybeMessage< ::IMC_DCCL::EstimatedState >(Arena* arena) {
  return Arena::CreateInternal< ::IMC_DCCL::EstimatedState >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::IMC_DCCL::Goto* Arena::CreateMaybeMessage< ::IMC_DCCL::Goto >(Arena* arena) {
  return Arena::CreateInternal< ::IMC_DCCL::Goto >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::IMC_DCCL::FollowPath* Arena::CreateMaybeMessage< ::IMC_DCCL::FollowPath >(Arena* arena) {
  return Arena::CreateInternal< ::IMC_DCCL::FollowPath >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::IMC_DCCL::Loiter* Arena::CreateMaybeMessage< ::IMC_DCCL::Loiter >(Arena* arena) {
  return Arena::CreateInternal< ::IMC_DCCL::Loiter >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::IMC_DCCL::PathPoint* Arena::CreateMaybeMessage< ::IMC_DCCL::PathPoint >(Arena* arena) {
  return Arena::CreateInternal< ::IMC_DCCL::PathPoint >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::IMC_DCCL::Maneuver* Arena::CreateMaybeMessage< ::IMC_DCCL::Maneuver >(Arena* arena) {
  return Arena::CreateInternal< ::IMC_DCCL::Maneuver >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::IMC_DCCL::ParameterValue* Arena::CreateMaybeMessage< ::IMC_DCCL::ParameterValue >(Arena* arena) {
  return Arena::CreateInternal< ::IMC_DCCL::ParameterValue >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::IMC_DCCL::EntityParameter* Arena::CreateMaybeMessage< ::IMC_DCCL::EntityParameter >(Arena* arena) {
  return Arena::CreateInternal< ::IMC_DCCL::EntityParameter >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::IMC_DCCL::EntityParameters* Arena::CreateMaybeMessage< ::IMC_DCCL::EntityParameters >(Arena* arena) {
  return Arena::CreateInternal< ::IMC_DCCL::EntityParameters >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::IMC_DCCL::ManeuverID* Arena::CreateMaybeMessage< ::IMC_DCCL::ManeuverID >(Arena* arena) {
  return Arena::CreateInternal< ::IMC_DCCL::ManeuverID >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::IMC_DCCL::PlanManeuver* Arena::CreateMaybeMessage< ::IMC_DCCL::PlanManeuver >(Arena* arena) {
  return Arena::CreateInternal< ::IMC_DCCL::PlanManeuver >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::IMC_DCCL::PlanVariable* Arena::CreateMaybeMessage< ::IMC_DCCL::PlanVariable >(Arena* arena) {
  return Arena::CreateInternal< ::IMC_DCCL::PlanVariable >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::IMC_DCCL::PlanTransition* Arena::CreateMaybeMessage< ::IMC_DCCL::PlanTransition >(Arena* arena) {
  return Arena::CreateInternal< ::IMC_DCCL::PlanTransition >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::IMC_DCCL::PlanSpecification* Arena::CreateMaybeMessage< ::IMC_DCCL::PlanSpecification >(Arena* arena) {
  return Arena::CreateInternal< ::IMC_DCCL::PlanSpecification >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
